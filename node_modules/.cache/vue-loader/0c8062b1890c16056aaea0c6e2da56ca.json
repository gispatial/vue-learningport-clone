{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieSlider/MovieSlider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieSlider/MovieSlider.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\nimport Slider from '../../components/Slider/Slider.vue';\nimport MovieSliderItem from '../../components/MovieSliderItem/MovieSliderItem.vue';\nimport MovieDetails from '../../components/MovieDetails/MovieDetails.vue';\nimport clickOutside from '../../directives/clickOutside';\n\nexport default {\n  name: 'MovieSlider',\n  props: {\n    categoryTitle: String,\n    requestUrl: String,\n  },\n  data() {\n    return {\n      movieList: [],\n      selectedMovie: null,\n      options: {\n        dots: false,\n        navButtons: false,\n        slidesToShow: 5,\n        slidesToScroll: 5,\n        mobileFirst: false,\n        speed: 300,\n        timing: 'ease-in-out',\n        extraClass: 'MovieSlider',\n        responsive: [\n          { breakpoint: 576, settings: { slidesToShow: 1, slidesToScroll: 1 } },\n          { breakpoint: 768, settings: { slidesToShow: 2, slidesToScroll: 2 } },\n          { breakpoint: 992, settings: { slidesToShow: 3, slidesToScroll: 3 } },\n          { breakpoint: 1100, settings: { slidesToShow: 4, slidesToScroll: 4 } },\n        ],\n      }\n    };\n  },\n  components: {\n    Slider,\n    MovieSliderItem,\n    MovieDetails,\n  },\n  directives: {\n    clickOutside,\n  },\n  methods: {\n    selectMovie(movie) {\n      if (this.selectedMovie && this.selectedMovie.id === movie.id) this.selectedMovie = null;\n      else this.selectedMovie = movie;\n    },\n    unselectMovie() {\n      this.selectedMovie = null;\n    },\n  },\n  mounted() {\n    this.$refs.slider.toggleLoading();\n    axios.get(`https://api.themoviedb.org/3/${this.requestUrl}`)\n      .then(response => {\n        this.movieList = response.data.results;\n      })\n      .then(() => {\n        this.$refs.slider.reload();\n        this.$refs.slider.toggleLoading();\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  },\n}\n",{"version":3,"sources":["MovieSlider.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MovieSlider.vue","sourceRoot":"src/components/MovieSlider","sourcesContent":["<template>\n  <div class=\"MovieSlider__wrapper\">\n    <h2 class=\"MovieSlider__title\">{{ categoryTitle }}</h2>\n    <div v-click-outside=\"unselectMovie\">\n      <Slider ref=\"slider\" :options=\"options\" :class=\"{ 'Slider--has-selected': selectedMovie }\">\n        <div v-for=\"(movie, index) in movieList\" :key=\"index\" :class=\"`slide--${index}`\">\n          <MovieSliderItem :movie=\"movie\" v-on:select-movie=\"selectMovie\" />\n        </div>\n      </Slider>\n      <transition name='fade-in-up'>\n        <div v-if=\"selectedMovie\" class=\"MovieSlider__details\">\n          <div @click.stop>\n            <MovieDetails :movie=\"selectedMovie\" />\n            <button type=\"button\" class=\"btn--close\" @click=\"unselectMovie\" />\n          </div>\n        </div>\n      </transition>\n    </div>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  import Slider from '../../components/Slider/Slider.vue';\n  import MovieSliderItem from '../../components/MovieSliderItem/MovieSliderItem.vue';\n  import MovieDetails from '../../components/MovieDetails/MovieDetails.vue';\n  import clickOutside from '../../directives/clickOutside';\n\n  export default {\n    name: 'MovieSlider',\n    props: {\n      categoryTitle: String,\n      requestUrl: String,\n    },\n    data() {\n      return {\n        movieList: [],\n        selectedMovie: null,\n        options: {\n          dots: false,\n          navButtons: false,\n          slidesToShow: 5,\n          slidesToScroll: 5,\n          mobileFirst: false,\n          speed: 300,\n          timing: 'ease-in-out',\n          extraClass: 'MovieSlider',\n          responsive: [\n            { breakpoint: 576, settings: { slidesToShow: 1, slidesToScroll: 1 } },\n            { breakpoint: 768, settings: { slidesToShow: 2, slidesToScroll: 2 } },\n            { breakpoint: 992, settings: { slidesToShow: 3, slidesToScroll: 3 } },\n            { breakpoint: 1100, settings: { slidesToShow: 4, slidesToScroll: 4 } },\n          ],\n        }\n      };\n    },\n    components: {\n      Slider,\n      MovieSliderItem,\n      MovieDetails,\n    },\n    directives: {\n      clickOutside,\n    },\n    methods: {\n      selectMovie(movie) {\n        if (this.selectedMovie && this.selectedMovie.id === movie.id) this.selectedMovie = null;\n        else this.selectedMovie = movie;\n      },\n      unselectMovie() {\n        this.selectedMovie = null;\n      },\n    },\n    mounted() {\n      this.$refs.slider.toggleLoading();\n      axios.get(`https://api.themoviedb.org/3/${this.requestUrl}`)\n        .then(response => {\n          this.movieList = response.data.results;\n        })\n        .then(() => {\n          this.$refs.slider.reload();\n          this.$refs.slider.toggleLoading();\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n  @import 'MovieSlider';\n</style>\n"]}]}