{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/pages/SignIn/SignIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/pages/SignIn/SignIn.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Spinner from '../../components/Spinner/Spinner'\nimport { routes, actions } from '../../helpers/constants';\n\nexport default {\n  name: 'SignIn',\n  data() {\n    return {\n      email: '',\n      password: '',\n      rememberMe: false,\n      signUpRoute: routes.signUp,\n    };\n  },\n  computed: {\n    user() {\n      return this.$store.getters.user;\n    },\n    error() {\n      let template = '';\n      if (!this.$store.getters.error) return null;\n      switch (this.$store.getters.error.code) {\n        case ('auth/user-not-found'):\n          template = \"<div>Sorry, we can\\'t find an account with this email address. Please try again or \" +\n            \"<router-link to='/sign-up'>create a new account.</router-link></div>\";\n          break;\n        case ('auth/wrong-password'):\n          template = \"<div><b>Incorrect password.</b> Please try again or you can \" +\n            \"<router-link to='/recover-password'>reset your password.</router-link></div>\";\n          break;\n        default:\n          template = '';\n      }\n      return {\n        template: template,\n      };\n    },\n    loading() {\n      return this.$store.getters.loading;\n    },\n  },\n  components: {\n    Spinner,\n  },\n  watch: {\n    user(value) {\n      if (value !== null && value !== undefined) {\n        this.$router.push(routes.home);\n      }\n    },\n  },\n  methods: {\n    onSignIn() {\n      this.$store.dispatch(actions.signIn, {\n        email: this.email,\n        password: this.password,\n        rememberMe: this.rememberMe,\n      });\n    },\n    onSignInGoogle() {\n      this.$store.dispatch(actions.signInGoogle);\n    },\n    onSignInFacebook () {\n      this.$store.dispatch(actions.signInFacebook)\n    },\n    onSignInAnonymously () {\n      this.$store.dispatch(actions.signInAnonymously)\n    },\n  },\n  destroyed() {\n    this.$store.dispatch(actions.clearError);\n  },\n};\n",{"version":3,"sources":["SignIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignIn.vue","sourceRoot":"src/pages/SignIn","sourcesContent":["<template>\n  <div class=\"SignIn\">\n    <div class=\"bg tile\">\n      <div class=\"tile__container\">\n        <h1 class=\"tile__title\">\n          Sign In\n        </h1>\n        <transition name=\"fade-height\">\n          <div v-bind:is=\"error\" v-if=\"error\" class=\"form__error-message\" />\n        </transition>\n        <form @submit.prevent=\"onSignIn\" class=\"form\">\n          <div class=\"form__field\">\n            <div class=\"input__wrapper\">\n              <input\n                id=\"email\"\n                type=\"email\"\n                required\n                placeholder=\"Email\"\n                v-model=\"email\"\n                :class=\"[{ 'input--filled': email }, 'input']\"\n              >\n              <label class=\"input__placeholder\" for=\"email\">\n                Email\n              </label>\n            </div>\n          </div>\n          <div class=\"form__field\">\n            <div class=\"input__wrapper\">\n              <input\n                id=\"password\"\n                type=\"password\"\n                required\n                placeholder=\"Password\"\n                v-model=\"password\"\n                :class=\"[{ 'input--filled': password }, 'input']\"\n              >\n              <label class=\"input__placeholder\" for=\"password\">\n                Password\n              </label>\n            </div>\n          </div>\n          <div class=\"form__btns\">\n            <button type=\"submit\" class=\"btn btn--primary\" :disabled=\"loading\">\n              Sign In\n            </button>\n            <button type=\"button\" class=\"btn btn--secondary\" :disabled=\"loading\" @click=\"onSignInAnonymously\">\n              Demo User\n            </button>\n          </div>\n          <div class=\"flex-jc\">\n            <div class=\"checkbox__wrapper\">\n              <input\n                id=\"rememberMeCheckbox\"\n                type=\"checkbox\"\n                class=\"checkbox__input\"\n                v-model=\"rememberMe\"\n              >\n                <label for=\"rememberMeCheckbox\" class=\"checkbox\">\n                <span>\n                  <svg width=\"12px\" height=\"10px\" viewBox=\"0 0 12 10\">\n                    <polyline points=\"1.5 6 4.5 9 10.5 1\" />\n                  </svg>\n                </span>\n                <span class=\"checkbox__text\">\n                  Remember me\n                </span>\n              </label>\n            </div>\n            <a href=\"https://www.netflix.com/LoginHelp\" class=\"link link--s\">\n              Need help ?\n            </a>\n          </div>\n        </form>\n        <ul class=\"SignIn__social-list\">\n          <li class=\"SignIn_social-item\">\n            <button\n              class=\"btn SignIn__social-btn\"\n              :disabled=\"loading\"\n              @click.prevent=\"onSignInGoogle\"\n            >\n              <i class=\"SignIn__social-icon\">\n                <font-awesome-icon :icon=\"['fab', 'google']\" />\n              </i>\n              Login with Google\n            </button>\n          </li>\n          <li class=\"SignIn_social-item\">\n            <button\n              class=\"btn SignIn__social-btn\"\n              :disabled=\"loading\"\n              @click.prevent=\"onSignInFacebook\"\n            >\n              <i class=\"SignIn__social-icon\">\n                <font-awesome-icon :icon=\"['fab', 'facebook']\" />\n              </i>\n              Login with Facebook\n            </button>\n          </li>\n        </ul>\n        <p>\n          New to netflix? <router-link class=\"link link--white\" :to=\"signUpRoute\">Sign up now.</router-link>\n        </p>\n        <div class=\"Spinner__overflow\" v-if=\"loading\">\n          <Spinner />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import Spinner from '../../components/Spinner/Spinner'\n  import { routes, actions } from '../../helpers/constants';\n\n  export default {\n    name: 'SignIn',\n    data() {\n      return {\n        email: '',\n        password: '',\n        rememberMe: false,\n        signUpRoute: routes.signUp,\n      };\n    },\n    computed: {\n      user() {\n        return this.$store.getters.user;\n      },\n      error() {\n        let template = '';\n        if (!this.$store.getters.error) return null;\n        switch (this.$store.getters.error.code) {\n          case ('auth/user-not-found'):\n            template = \"<div>Sorry, we can\\'t find an account with this email address. Please try again or \" +\n              \"<router-link to='/sign-up'>create a new account.</router-link></div>\";\n            break;\n          case ('auth/wrong-password'):\n            template = \"<div><b>Incorrect password.</b> Please try again or you can \" +\n              \"<router-link to='/recover-password'>reset your password.</router-link></div>\";\n            break;\n          default:\n            template = '';\n        }\n        return {\n          template: template,\n        };\n      },\n      loading() {\n        return this.$store.getters.loading;\n      },\n    },\n    components: {\n      Spinner,\n    },\n    watch: {\n      user(value) {\n        if (value !== null && value !== undefined) {\n          this.$router.push(routes.home);\n        }\n      },\n    },\n    methods: {\n      onSignIn() {\n        this.$store.dispatch(actions.signIn, {\n          email: this.email,\n          password: this.password,\n          rememberMe: this.rememberMe,\n        });\n      },\n      onSignInGoogle() {\n        this.$store.dispatch(actions.signInGoogle);\n      },\n      onSignInFacebook () {\n        this.$store.dispatch(actions.signInFacebook)\n      },\n      onSignInAnonymously () {\n        this.$store.dispatch(actions.signInAnonymously)\n      },\n    },\n    destroyed() {\n      this.$store.dispatch(actions.clearError);\n    },\n  };\n</script>\n\n<style lang=\"scss\">\n  @import 'SignIn';\n</style>\n"]}]}