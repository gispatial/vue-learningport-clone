{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/pages/SignIn/SignIn.vue?vue&type=template&id=0803b94a&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/pages/SignIn/SignIn.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1636081674749},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"SignIn\" }, [\n    _c(\"div\", { staticClass: \"bg tile\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"tile__container\" },\n        [\n          _c(\"h1\", { staticClass: \"tile__title\" }, [\n            _vm._v(\"\\n        Sign In\\n      \"),\n          ]),\n          _c(\n            \"transition\",\n            { attrs: { name: \"fade-height\" } },\n            [\n              _vm.error\n                ? _c(_vm.error, {\n                    tag: \"div\",\n                    staticClass: \"form__error-message\",\n                  })\n                : _vm._e(),\n            ],\n            1\n          ),\n          _c(\n            \"form\",\n            {\n              staticClass: \"form\",\n              on: {\n                submit: function ($event) {\n                  $event.preventDefault()\n                  return _vm.onSignIn.apply(null, arguments)\n                },\n              },\n            },\n            [\n              _c(\"div\", { staticClass: \"form__field\" }, [\n                _c(\"div\", { staticClass: \"input__wrapper\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.email,\n                        expression: \"email\",\n                      },\n                    ],\n                    class: [{ \"input--filled\": _vm.email }, \"input\"],\n                    attrs: {\n                      id: \"email\",\n                      type: \"email\",\n                      required: \"\",\n                      placeholder: \"Email\",\n                    },\n                    domProps: { value: _vm.email },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.email = $event.target.value\n                      },\n                    },\n                  }),\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"input__placeholder\",\n                      attrs: { for: \"email\" },\n                    },\n                    [_vm._v(\"\\n              Email\\n            \")]\n                  ),\n                ]),\n              ]),\n              _c(\"div\", { staticClass: \"form__field\" }, [\n                _c(\"div\", { staticClass: \"input__wrapper\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.password,\n                        expression: \"password\",\n                      },\n                    ],\n                    class: [{ \"input--filled\": _vm.password }, \"input\"],\n                    attrs: {\n                      id: \"password\",\n                      type: \"password\",\n                      required: \"\",\n                      placeholder: \"Password\",\n                    },\n                    domProps: { value: _vm.password },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.password = $event.target.value\n                      },\n                    },\n                  }),\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"input__placeholder\",\n                      attrs: { for: \"password\" },\n                    },\n                    [_vm._v(\"\\n              Password\\n            \")]\n                  ),\n                ]),\n              ]),\n              _c(\"div\", { staticClass: \"form__btns\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn--primary\",\n                    attrs: { type: \"submit\", disabled: _vm.loading },\n                  },\n                  [_vm._v(\"\\n            Sign In\\n          \")]\n                ),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn--secondary\",\n                    attrs: { type: \"button\", disabled: _vm.loading },\n                    on: { click: _vm.onSignInAnonymously },\n                  },\n                  [_vm._v(\"\\n            Demo User\\n          \")]\n                ),\n              ]),\n              _c(\"div\", { staticClass: \"flex-jc\" }, [\n                _c(\"div\", { staticClass: \"checkbox__wrapper\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.rememberMe,\n                        expression: \"rememberMe\",\n                      },\n                    ],\n                    staticClass: \"checkbox__input\",\n                    attrs: { id: \"rememberMeCheckbox\", type: \"checkbox\" },\n                    domProps: {\n                      checked: Array.isArray(_vm.rememberMe)\n                        ? _vm._i(_vm.rememberMe, null) > -1\n                        : _vm.rememberMe,\n                    },\n                    on: {\n                      change: function ($event) {\n                        var $$a = _vm.rememberMe,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = null,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 && (_vm.rememberMe = $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              (_vm.rememberMe = $$a\n                                .slice(0, $$i)\n                                .concat($$a.slice($$i + 1)))\n                          }\n                        } else {\n                          _vm.rememberMe = $$c\n                        }\n                      },\n                    },\n                  }),\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"checkbox\",\n                      attrs: { for: \"rememberMeCheckbox\" },\n                    },\n                    [\n                      _c(\"span\", [\n                        _c(\n                          \"svg\",\n                          {\n                            attrs: {\n                              width: \"12px\",\n                              height: \"10px\",\n                              viewBox: \"0 0 12 10\",\n                            },\n                          },\n                          [\n                            _c(\"polyline\", {\n                              attrs: { points: \"1.5 6 4.5 9 10.5 1\" },\n                            }),\n                          ]\n                        ),\n                      ]),\n                      _c(\"span\", { staticClass: \"checkbox__text\" }, [\n                        _vm._v(\"\\n                Remember me\\n              \"),\n                      ]),\n                    ]\n                  ),\n                ]),\n                _c(\n                  \"a\",\n                  {\n                    staticClass: \"link link--s\",\n                    attrs: { href: \"https://www.netflix.com/LoginHelp\" },\n                  },\n                  [_vm._v(\"\\n            Need help ?\\n          \")]\n                ),\n              ]),\n            ]\n          ),\n          _c(\"ul\", { staticClass: \"SignIn__social-list\" }, [\n            _c(\"li\", { staticClass: \"SignIn_social-item\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn SignIn__social-btn\",\n                  attrs: { disabled: _vm.loading },\n                  on: {\n                    click: function ($event) {\n                      $event.preventDefault()\n                      return _vm.onSignInGoogle.apply(null, arguments)\n                    },\n                  },\n                },\n                [\n                  _c(\n                    \"i\",\n                    { staticClass: \"SignIn__social-icon\" },\n                    [\n                      _c(\"font-awesome-icon\", {\n                        attrs: { icon: [\"fab\", \"google\"] },\n                      }),\n                    ],\n                    1\n                  ),\n                  _vm._v(\"\\n            Login with Google\\n          \"),\n                ]\n              ),\n            ]),\n            _c(\"li\", { staticClass: \"SignIn_social-item\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn SignIn__social-btn\",\n                  attrs: { disabled: _vm.loading },\n                  on: {\n                    click: function ($event) {\n                      $event.preventDefault()\n                      return _vm.onSignInFacebook.apply(null, arguments)\n                    },\n                  },\n                },\n                [\n                  _c(\n                    \"i\",\n                    { staticClass: \"SignIn__social-icon\" },\n                    [\n                      _c(\"font-awesome-icon\", {\n                        attrs: { icon: [\"fab\", \"facebook\"] },\n                      }),\n                    ],\n                    1\n                  ),\n                  _vm._v(\"\\n            Login with Facebook\\n          \"),\n                ]\n              ),\n            ]),\n          ]),\n          _c(\n            \"p\",\n            [\n              _vm._v(\"\\n        New to netflix? \"),\n              _c(\n                \"router-link\",\n                {\n                  staticClass: \"link link--white\",\n                  attrs: { to: _vm.signUpRoute },\n                },\n                [_vm._v(\"Sign up now.\")]\n              ),\n            ],\n            1\n          ),\n          _vm.loading\n            ? _c(\n                \"div\",\n                { staticClass: \"Spinner__overflow\" },\n                [_c(\"Spinner\")],\n                1\n              )\n            : _vm._e(),\n        ],\n        1\n      ),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}