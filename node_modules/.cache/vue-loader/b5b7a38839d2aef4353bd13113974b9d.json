{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieSliderItem/MovieSliderItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieSliderItem/MovieSliderItem.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport MovieLabels from '../MovieLabels/MovieLabels'\nimport getImageUrl from '../../helpers/getImageUrl';\n\nexport default {\n  name: 'MovieSliderItem',\n  props: {\n    movie: {\n      name: String,\n      title: String,\n      overview: String,\n      backdrop_path: String,\n    },\n  },\n  components: {\n    MovieLabels,\n  },\n  methods: {\n    getImageUrl(url, size) {\n      return getImageUrl(url, size, 'backdrop');\n    },\n    selectMovie(movie) {\n      const slide = this.$el.parentNode;\n      const slider = slide.parentNode;\n      slider.childNodes.forEach(slide => slide.classList.remove('Slider__slide--selected'));\n      slide.classList.add('Slider__slide--selected');\n      this.$emit('select-movie', movie);\n    },\n  },\n}\n",{"version":3,"sources":["MovieSliderItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MovieSliderItem.vue","sourceRoot":"src/components/MovieSliderItem","sourcesContent":["<template>\n  <div\n    class=\"MovieSliderItem\"\n    :style=\"{ backgroundImage: 'url(' + getImageUrl(movie.backdrop_path, 1) + ')' }\"\n  >\n    <div class=\"MovieSliderItem__details\">\n      <h3 class=\"MovieSliderItem__title\">\n        {{ movie.title || movie.name }}\n      </h3>\n      <MovieLabels :movie=\"movie\" />\n      <button class=\"MovieSliderItem__btn\" @click=\"selectMovie(movie)\">\n        <font-awesome-icon :icon=\"['fas', 'info-circle']\"/>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\n  import MovieLabels from '../MovieLabels/MovieLabels'\n  import getImageUrl from '../../helpers/getImageUrl';\n\n  export default {\n    name: 'MovieSliderItem',\n    props: {\n      movie: {\n        name: String,\n        title: String,\n        overview: String,\n        backdrop_path: String,\n      },\n    },\n    components: {\n      MovieLabels,\n    },\n    methods: {\n      getImageUrl(url, size) {\n        return getImageUrl(url, size, 'backdrop');\n      },\n      selectMovie(movie) {\n        const slide = this.$el.parentNode;\n        const slider = slide.parentNode;\n        slider.childNodes.forEach(slide => slide.classList.remove('Slider__slide--selected'));\n        slide.classList.add('Slider__slide--selected');\n        this.$emit('select-movie', movie);\n      },\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"MovieSliderItem\";\n</style>\n"]}]}