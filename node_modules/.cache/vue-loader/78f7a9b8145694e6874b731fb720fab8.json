{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieList/MovieList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieList/MovieList.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios';\nimport MovieListItem from '../MovieListItem/MovieListItem';\nimport MovieDetails from '../MovieDetails/MovieDetails';\nimport Pagination from '../Pagination/Pagination';\nimport Spinner from '../Spinner/Spinner';\n\nexport default {\n  name: 'MovieList',\n  props: {\n    requestUrl: String,\n    emptyListTitle: String,\n    initialMovieList: Array,\n  },\n  data () {\n    return {\n      emptyTitle: this.emptyListTitle || 'No data here',\n      movieList: this.initialMovieList || [],\n      selectedMovie: null,\n      currentPage: 1,\n      totalPages: 0,\n      loading: false,\n    };\n  },\n  components: {\n    MovieListItem,\n    MovieDetails,\n    Pagination,\n    Spinner,\n  },\n  watch: {\n    requestUrl(value) {\n      if (value !== null && value !== undefined) {\n        this.loadMovies();\n      }\n    },\n    emptyListTitle(value) {\n      this.emptyTitle = value;\n    },\n    initialMovieList(value) {\n      if (value !== null && value !== undefined) {\n        this.movieList = value;\n        this.selectedMovie = null;\n      }\n    },\n  },\n  methods: {\n    toggleLoading() {\n      this.loading = !this.loading;\n    },\n    loadMovies() {\n      let { query } = this.$route;\n      const params = { page: 1 };\n      for (let key in query) {\n        params[key] = decodeURIComponent(query[key]);\n      }\n\n      if (!this.requestUrl) return;\n\n      this.toggleLoading();\n      axios.get(`https://api.themoviedb.org/3/${this.requestUrl}`, { params })\n        .then(response => {\n          this.movieList = response.data.results;\n          this.currentPage = response.data.page;\n          this.totalPages = response.data.total_pages < 1000 ? response.data.total_pages : 1000;\n        })\n        .then(() => {\n          window.scrollTo(0, 0);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n        this.toggleLoading();\n      });\n    },\n    selectMovie(movie) {\n      this.selectedMovie = movie;\n    },\n    unselectMovie() {\n      this.selectedMovie = null;\n    },\n  },\n  mounted() {\n    this.loadMovies();\n  },\n}\n",{"version":3,"sources":["MovieList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MovieList.vue","sourceRoot":"src/components/MovieList","sourcesContent":["<template>\n  <div class=\"MovieList__wrapper\">\n    <transition name=\"fade\">\n      <div class=\"MovieList\" v-if=\"movieList.length !== 0\">\n        <MovieListItem\n          v-for=\"(movie, index) in movieList\"\n          :key=\"index\"\n          :movie=\"movie\"\n          v-on:select-movie=\"selectMovie\"\n        />\n      </div>\n      <div v-else-if=\"!loading && movieList.length === 0\" class=\"MovieList__empty\">\n        {{ emptyTitle }}\n      </div>\n    </transition>\n    <transition name=\"fade\">\n      <div v-if=\"selectedMovie\" class=\"MovieList__details-backdrop\" @click=\"unselectMovie\">\n        <div @click.stop class=\"MovieList__details\">\n          <MovieDetails :movie=\"selectedMovie\" />\n          <button type=\"button\" class=\"btn--close\" @click=\"unselectMovie\" />\n        </div>\n      </div>\n    </transition>\n    <div v-if=\"loading\" class=\"Spinner__overflow\">\n      <Spinner />\n    </div>\n    <Pagination\n      v-if=\"totalPages\"\n      :current-page=\"currentPage\"\n      :total-pages=\"totalPages\"\n      @load=\"loadMovies\"\n    />\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  import MovieListItem from '../MovieListItem/MovieListItem';\n  import MovieDetails from '../MovieDetails/MovieDetails';\n  import Pagination from '../Pagination/Pagination';\n  import Spinner from '../Spinner/Spinner';\n\n  export default {\n    name: 'MovieList',\n    props: {\n      requestUrl: String,\n      emptyListTitle: String,\n      initialMovieList: Array,\n    },\n    data () {\n      return {\n        emptyTitle: this.emptyListTitle || 'No data here',\n        movieList: this.initialMovieList || [],\n        selectedMovie: null,\n        currentPage: 1,\n        totalPages: 0,\n        loading: false,\n      };\n    },\n    components: {\n      MovieListItem,\n      MovieDetails,\n      Pagination,\n      Spinner,\n    },\n    watch: {\n      requestUrl(value) {\n        if (value !== null && value !== undefined) {\n          this.loadMovies();\n        }\n      },\n      emptyListTitle(value) {\n        this.emptyTitle = value;\n      },\n      initialMovieList(value) {\n        if (value !== null && value !== undefined) {\n          this.movieList = value;\n          this.selectedMovie = null;\n        }\n      },\n    },\n    methods: {\n      toggleLoading() {\n        this.loading = !this.loading;\n      },\n      loadMovies() {\n        let { query } = this.$route;\n        const params = { page: 1 };\n        for (let key in query) {\n          params[key] = decodeURIComponent(query[key]);\n        }\n\n        if (!this.requestUrl) return;\n\n        this.toggleLoading();\n        axios.get(`https://api.themoviedb.org/3/${this.requestUrl}`, { params })\n          .then(response => {\n            this.movieList = response.data.results;\n            this.currentPage = response.data.page;\n            this.totalPages = response.data.total_pages < 1000 ? response.data.total_pages : 1000;\n          })\n          .then(() => {\n            window.scrollTo(0, 0);\n          })\n          .catch(error => {\n            console.log(error);\n          })\n          .finally(() => {\n          this.toggleLoading();\n        });\n      },\n      selectMovie(movie) {\n        this.selectedMovie = movie;\n      },\n      unselectMovie() {\n        this.selectedMovie = null;\n      },\n    },\n    mounted() {\n      this.loadMovies();\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n  @import 'MovieList';\n</style>\n"]}]}