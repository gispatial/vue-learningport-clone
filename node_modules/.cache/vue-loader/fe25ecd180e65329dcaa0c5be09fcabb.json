{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/Header/AuthorizedHeader.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/Header/AuthorizedHeader.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/css-loader/index.js","mtime":1636081674506},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1636081674749},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/postcss-loader/src/index.js","mtime":1635532806520},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/sass-loader/dist/cjs.js","mtime":1636081675388},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"./Header.scss\";\n",{"version":3,"sources":["AuthorizedHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA","file":"AuthorizedHeader.vue","sourceRoot":"src/components/Header","sourcesContent":["<template>\n  <header :class=\"[{ 'Header--bg': isScrolled }, 'Header']\">\n    <router-link :to=\"homeRoute\">\n      <NetflixLogo class=\"Header__logo\" />\n    </router-link>\n\n    <nav :class=\"[{ 'Header__nav--opened': isMenuOpened }, 'Header__nav']\">\n      <ul class=\"Header__nav-list\">\n        <li class=\"Header__nav-item\" v-for=\"(navItem, index) in navList\" :key=\"index\">\n          <router-link v-if=\"!navItem.nav\" class=\"Header__nav-link\" :to=\"navItem.link\">\n            {{ navItem.title }}\n          </router-link>\n          <div v-else class=\"Header__nav-link\">\n            {{ navItem.title }}\n            <div class=\"dropdown\">\n              <div class=\"dropdown__list\" v-for=\"(dropdownItem, index) in navItem.nav\" :key=\"index\">\n                <router-link class=\"dropdown__btn\" :to=\"`${navItem.link}/${dropdownItem.id}`\">\n                  {{ dropdownItem.name }}\n                </router-link>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </nav>\n\n    <div class=\"Header__search\" :class=\"[{ 'Header__search--active': search }, 'Header__search']\">\n      <label class=\"flex-jc\">\n        <font-awesome-icon :icon=\"['fas', 'search']\" class=\"Header__search-icon\" />\n        <input\n          name=\"search\"\n          type=\"text\"\n          placeholder=\"Titles, characters, geners\"\n          v-model=\"search\"\n          class=\"Header__search-input\"\n        >\n      </label>\n    </div>\n\n    <div class=\"Header__actions\">\n      <ProfileDropdown />\n      <button :class=\"[{ 'hamburger--active': isMenuOpened }, 'hamburger', 'button']\" v-on:click=\"toggleSidebar\">\n        <span />\n        <span />\n        <span />\n      </button>\n    </div>\n  </header>\n</template>\n\n<script>\n  import ProfileDropdown from '../ProfileDropdown/ProfileDropdown';\n  import NetflixLogo from '../../assets/images/netflix.svg';\n  import debounce from '../../helpers/debounce';\n  import { routes, actions } from '../../helpers/constants';\n\n  export default {\n    name: 'AuthorizedHeader',\n    data() {\n      return {\n        search: '',\n        isScrolled: false,\n        isMenuOpened: false,\n        homeRoute: routes.home,\n        navList: [\n          { title: 'Home', link: routes.home },\n          { title: 'TV Shows', link: routes.tvShows, nav: [] },\n          { title: 'Movies', link: routes.movies, nav: [] },\n          { title: 'New & Popular', link: routes.popular },\n          { title: 'My List', link: routes.myList },\n        ],\n      };\n    },\n    computed: {\n      path() {\n        return this.$route.path;\n      },\n      genres() {\n        return this.$store.getters.genres;\n      },\n    },\n    components: {\n      ProfileDropdown,\n      NetflixLogo,\n    },\n    watch: {\n      path() {\n        this.isMenuOpened = false;\n      },\n      genres(value) {\n        if (value !== null && value !== undefined) {\n          this.navList = this.navList.map(item => {\n            if (item.title === 'TV Shows') return { ...item, nav: value.tv };\n            if (item.title === 'Movies') return { ...item, nav: value.movies };\n            return item;\n          });\n        }\n      },\n      search: debounce(function(value) {\n        this.$router.push(`${routes.search}/${value}`);\n      }, 600),\n    },\n    methods: {\n      handleScroll() {\n        const currentScrollPosition = window.pageYOffset || document.documentElement.scrollTop;\n        if (currentScrollPosition > 30) return this.isScrolled = true;\n        else return this.isScrolled = false;\n      },\n      toggleSidebar() {\n        this.isMenuOpened = !this.isMenuOpened;\n        if (this.isMenuOpened) document.documentElement.classList.add('no-scroll');\n        else document.documentElement.classList.remove('no-scroll');\n      },\n    },\n    created() {\n      window.addEventListener('scroll', this.handleScroll);\n    },\n    mounted() {\n      if (this.$route.params.search) {\n        this.search = this.$route.params.search;\n      }\n      return this.$store.dispatch(actions.setGenres);\n    },\n    destroyed() {\n      window.removeEventListener('scroll', this.handleScroll);\n    },\n  };\n</script>\n\n<style lang=\"scss\">\n  @import \"./Header.scss\";\n</style>\n"]}]}