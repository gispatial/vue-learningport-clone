{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/helpers/debounce.js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/helpers/debounce.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/babel.config.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1636081673414}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\nfunction convertTime(time) {\n  var _String$split = String(time).split(/(ms|s)/i),\n      _String$split2 = _slicedToArray(_String$split, 2),\n      amt = _String$split2[0],\n      _String$split2$ = _String$split2[1],\n      t = _String$split2$ === void 0 ? 'ms' : _String$split2$;\n\n  var types = {\n    ms: 1,\n    s: 1000\n  };\n  return Number(amt) * types[t];\n}\n\nfunction debounce(fn, wait) {\n  var timeout = null;\n  var timer = typeof wait === 'number' ? wait : convertTime(wait);\n\n  var debounced = function debounced() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var later = function later() {\n      timeout = null;\n      fn.apply(_this, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, timer);\n    if (!timeout) fn.apply(this, args);\n  };\n\n  debounced.cancel = function () {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return debounced;\n}\n\nexport default debounce;",{"version":3,"sources":["/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/helpers/debounce.js"],"names":["convertTime","time","String","split","amt","t","types","ms","s","Number","debounce","fn","wait","timeout","timer","debounced","args","later","apply","clearTimeout","setTimeout","cancel"],"mappings":";;;;AAAA,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AACzB,sBAAwBC,MAAM,CAACD,IAAD,CAAN,CAAaE,KAAb,CAAmB,SAAnB,CAAxB;AAAA;AAAA,MAAOC,GAAP;AAAA;AAAA,MAAYC,CAAZ,gCAAgB,IAAhB;;AACA,MAAMC,KAAK,GAAG;AACZC,IAAAA,EAAE,EAAE,CADQ;AAEZC,IAAAA,CAAC,EAAE;AAFS,GAAd;AAKA,SAAOC,MAAM,CAACL,GAAD,CAAN,GAAcE,KAAK,CAACD,CAAD,CAA1B;AACD;;AAED,SAASK,QAAT,CAAkBC,EAAlB,EAAsBC,IAAtB,EAA4B;AAC1B,MAAIC,OAAO,GAAG,IAAd;AACA,MAAMC,KAAK,GAAG,OAAOF,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCZ,WAAW,CAACY,IAAD,CAA3D;;AAEA,MAAMG,SAAS,GAAG,SAAZA,SAAY,GAAmB;AAAA;;AAAA,sCAANC,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACnC,QAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBJ,MAAAA,OAAO,GAAG,IAAV;AACAF,MAAAA,EAAE,CAACO,KAAH,CAAS,KAAT,EAAeF,IAAf;AACD,KAHD;;AAKAG,IAAAA,YAAY,CAACN,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGO,UAAU,CAACH,KAAD,EAAQH,KAAR,CAApB;AAEA,QAAI,CAACD,OAAL,EAAcF,EAAE,CAACO,KAAH,CAAS,IAAT,EAAeF,IAAf;AACf,GAVD;;AAYAD,EAAAA,SAAS,CAACM,MAAV,GAAmB,YAAM;AACvBF,IAAAA,YAAY,CAACN,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAG,IAAV;AACD,GAHD;;AAKA,SAAOE,SAAP;AACD;;AAED,eAAeL,QAAf","sourcesContent":["function convertTime(time) {\n  const [amt, t = 'ms'] = String(time).split(/(ms|s)/i);\n  const types = {\n    ms: 1,\n    s: 1000,\n  };\n\n  return Number(amt) * types[t];\n}\n\nfunction debounce(fn, wait) {\n  let timeout = null;\n  const timer = typeof wait === 'number' ? wait : convertTime(wait);\n\n  const debounced = function (...args) {\n    const later = () => {\n      timeout = null;\n      fn.apply(this, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, timer);\n\n    if (!timeout) fn.apply(this, args);\n  };\n\n  debounced.cancel = () => {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return debounced;\n}\n\nexport default debounce;"]}]}