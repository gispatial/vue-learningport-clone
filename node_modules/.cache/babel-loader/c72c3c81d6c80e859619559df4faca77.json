{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieDetails/MovieDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieDetails/MovieDetails.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/babel.config.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MovieLabels from \"../MovieLabels/MovieLabels\";\nimport getImageUrl from \"../../helpers/getImageUrl\";\nimport { actions } from \"../../helpers/constants\";\nexport default {\n  name: 'MovieDetails',\n  props: {\n    movie: {\n      id: Number,\n      name: String,\n      title: String,\n      overview: String,\n      genre_ids: Array,\n      backdrop_path: String\n    }\n  },\n  computed: {\n    movieGenres: function movieGenres() {\n      var _this = this;\n\n      if (!this.$store.getters.genres) return '';\n      return this.$store.getters.genres.movies.filter(function (_ref) {\n        var id = _ref.id;\n        return _this.movie.genre_ids.includes(id);\n      }).map(function (_ref2) {\n        var name = _ref2.name;\n        return name;\n      }).join(', ');\n    },\n    isMovieInMyList: function isMovieInMyList() {\n      var _this2 = this;\n\n      return this.$store.getters.myList.find(function (_ref3) {\n        var id = _ref3.id;\n        return id === _this2.movie.id;\n      });\n    }\n  },\n  components: {\n    MovieLabels: MovieLabels\n  },\n  methods: {\n    getBackgroundImageUrl: function getBackgroundImageUrl(url, size) {\n      return \"url(\".concat(getImageUrl(url, size, 'backdrop'), \")\");\n    },\n    addMovieToMyList: function addMovieToMyList() {\n      this.$store.dispatch(actions.addMovieToMyList, {\n        movie: this.movie\n      });\n    },\n    removeMovieFromMyList: function removeMovieFromMyList() {\n      this.$store.dispatch(actions.removeMovieFromMyList, {\n        movie: this.movie\n      });\n    }\n  }\n};",{"version":3,"sources":["MovieDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAA,WAAA;AACA,OAAA,WAAA;AACA,SAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,EAAA,EAAA,MADA;AAEA,MAAA,IAAA,EAAA,MAFA;AAGA,MAAA,KAAA,EAAA,MAHA;AAIA,MAAA,QAAA,EAAA,MAJA;AAKA,MAAA,SAAA,EAAA,KALA;AAMA,MAAA,aAAA,EAAA;AANA;AADA,GAFA;AAYA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AAAA;;AACA,UAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA,EAAA,OAAA,EAAA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,MAAA,CACA,MADA,CACA;AAAA,YAAA,EAAA,QAAA,EAAA;AAAA,eAAA,KAAA,CAAA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,EAAA,CAAA;AAAA,OADA,EAEA,GAFA,CAEA;AAAA,YAAA,IAAA,SAAA,IAAA;AAAA,eAAA,IAAA;AAAA,OAFA,EAGA,IAHA,CAGA,IAHA,CAAA;AAIA,KAPA;AAQA,IAAA,eARA,6BAQA;AAAA;;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAAA,YAAA,EAAA,SAAA,EAAA;AAAA,eAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA;AAVA,GAZA;AAwBA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GAxBA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,qBADA,iCACA,GADA,EACA,IADA,EACA;AACA,2BAAA,WAAA,CAAA,GAAA,EAAA,IAAA,EAAA,UAAA,CAAA;AACA,KAHA;AAIA,IAAA,gBAJA,8BAIA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,gBAAA,EAAA;AACA,QAAA,KAAA,EAAA,KAAA;AADA,OAAA;AAGA,KARA;AASA,IAAA,qBATA,mCASA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,qBAAA,EAAA;AACA,QAAA,KAAA,EAAA,KAAA;AADA,OAAA;AAGA;AAbA;AA3BA,CAAA","sourcesContent":["<template>\n  <div class=\"MovieDetails\" :style=\"{ backgroundImage: getBackgroundImageUrl(movie.backdrop_path, 2) }\">\n    <div class=\"MovieDetails__fade--top\" />\n    <div class=\"MovieDetails__wrapper\">\n      <h1 class=\"MovieDetails__title\">\n        {{ movie.title || movie.name }}\n      </h1>\n      <MovieLabels :movie=\"movie\" />\n      <div class=\"MovieDetails__details\">\n        <p class=\"MovieDetails__description\">\n          {{ movie.overview }}\n        </p>\n        <p class=\"MovieDetails__description\">\n          Genres: <span class=\"MovieDetails__description--white\">{{ movieGenres }}</span>\n        </p>\n        <button v-if=\"!isMovieInMyList\" type=\"button\" class=\"btn MovieDetails__btn\" @click=\"addMovieToMyList\">\n          <font-awesome-icon :icon=\"['fas', 'plus']\" class=\"MovieDetails__btn-icon\" fixed-width /> My List\n        </button>\n        <button v-else type=\"button\" class=\"btn MovieDetails__btn\" @click=\"removeMovieFromMyList\">\n           <font-awesome-icon :icon=\"['fas', 'minus']\" class=\"MovieDetails__btn-icon\" fixed-width /> My List\n        </button>\n      </div>\n    </div>\n    <div class=\"MovieDetails__fade--bottom\" />\n  </div>\n</template>\n\n<script>\n  import MovieLabels from '../MovieLabels/MovieLabels';\n  import getImageUrl from '../../helpers/getImageUrl';\n  import { actions } from '../../helpers/constants';\n\n  export default {\n    name: 'MovieDetails',\n    props: {\n      movie: {\n        id: Number,\n        name: String,\n        title: String,\n        overview: String,\n        genre_ids: Array,\n        backdrop_path: String,\n      },\n    },\n    computed: {\n      movieGenres() {\n        if (!this.$store.getters.genres) return '';\n        return this.$store.getters.genres.movies\n          .filter(({ id }) => this.movie.genre_ids.includes(id))\n          .map(({ name }) => name)\n          .join(', ');\n      },\n      isMovieInMyList() {\n        return this.$store.getters.myList.find(({ id }) => id === this.movie.id);\n      },\n    },\n    components: {\n      MovieLabels,\n    },\n    methods: {\n      getBackgroundImageUrl(url, size) {\n        return `url(${getImageUrl(url, size, 'backdrop')})`;\n      },\n      addMovieToMyList() {\n        this.$store.dispatch(actions.addMovieToMyList, { \n          movie: this.movie,\n        });\n      },\n      removeMovieFromMyList() {\n        this.$store.dispatch(actions.removeMovieFromMyList, { \n          movie: this.movie,\n        });\n      },\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n  @import 'MovieDetails';\n</style>\n"],"sourceRoot":"src/components/MovieDetails"}]}