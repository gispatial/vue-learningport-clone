{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/pages/Movies/Movies.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/pages/Movies/Movies.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/babel.config.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MovieList from \"../../components/MovieList/MovieList\";\nexport default {\n  name: 'Movies',\n  data: function data() {\n    return {\n      categoryTitle: '',\n      movieGenresId: +this.$route.params.id\n    };\n  },\n  computed: {\n    query: function query() {\n      return this.$route.params.id;\n    },\n    genres: function genres() {\n      return this.$store.getters.genres;\n    }\n  },\n  components: {\n    MovieList: MovieList\n  },\n  watch: {\n    query: function query(value) {\n      if (value !== null && value !== undefined) {\n        this.movieGenresId = +this.$route.params.id;\n        this.setTitle();\n      }\n    },\n    genres: function genres(value) {\n      if (value !== null && value !== undefined) {\n        this.setTitle();\n      }\n    }\n  },\n  methods: {\n    setTitle: function setTitle() {\n      var _this = this;\n\n      this.categoryTitle = this.genres.movies.find(function (_ref) {\n        var id = _ref.id;\n        return id === _this.movieGenresId;\n      }).name;\n    }\n  },\n  mounted: function mounted() {\n    if (this.$store.getters.genres) {\n      this.setTitle();\n    }\n  }\n};",{"version":3,"sources":["Movies.vue"],"names":[],"mappings":";;;;;;;;;;;AAUA,OAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,EADA;AAEA,MAAA,aAAA,EAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,KAHA;AAIA,IAAA,MAJA,oBAIA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA;AACA;AANA,GARA;AAgBA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAhBA;AAmBA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,KADA,EACA;AACA,UAAA,KAAA,KAAA,IAAA,IAAA,KAAA,KAAA,SAAA,EAAA;AACA,aAAA,aAAA,GAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,aAAA,QAAA;AACA;AACA,KANA;AAOA,IAAA,MAPA,kBAOA,KAPA,EAOA;AACA,UAAA,KAAA,KAAA,IAAA,IAAA,KAAA,KAAA,SAAA,EAAA;AACA,aAAA,QAAA;AACA;AACA;AAXA,GAnBA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,WAAA,aAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAAA,YAAA,EAAA,QAAA,EAAA;AAAA,eAAA,EAAA,KAAA,KAAA,CAAA,aAAA;AAAA,OAAA,EAAA,IAAA;AACA;AAHA,GAhCA;AAqCA,EAAA,OArCA,qBAqCA;AACA,QAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA,EAAA;AACA,WAAA,QAAA;AACA;AACA;AAzCA,CAAA","sourcesContent":["<template>\n  <div class=\"page__content\">\n    <h1 class=\"page__title\">\n      Movies <span v-if=\"categoryTitle\">({{ categoryTitle }})</span>\n    </h1>\n    <MovieList :request-url=\"'discover/movie?with_genres=' + movieGenresId\" />\n  </div>\n</template>\n\n<script>\n  import MovieList from '../../components/MovieList/MovieList';\n\n  export default {\n    name: 'Movies',\n    data() {\n      return {\n        categoryTitle: '',\n        movieGenresId: +this.$route.params.id,\n      };\n    },\n    computed: {\n      query() {\n        return this.$route.params.id;\n      },\n      genres() {\n        return this.$store.getters.genres;\n      },\n    },\n    components: {\n      MovieList,\n    },\n    watch: {\n      query(value) {\n        if (value !== null && value !== undefined) {\n          this.movieGenresId = +this.$route.params.id;\n          this.setTitle();\n        }\n      },\n      genres(value) {\n        if (value !== null && value !== undefined) {\n          this.setTitle();\n        }\n      },\n    },\n    methods: {\n      setTitle() {\n        this.categoryTitle = this.genres.movies.find(({ id }) => id === this.movieGenresId).name;\n      },\n    },\n    mounted() {\n      if (this.$store.getters.genres) {\n        this.setTitle();\n      }\n    },\n  }\n</script>\n"],"sourceRoot":"src/pages/Movies"}]}