{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/pages/RecoverPassword/RecoverPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/pages/RecoverPassword/RecoverPassword.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/babel.config.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport { actions } from \"../../helpers/constants\";\nexport default {\n  name: 'RecoverPassword',\n  data: function data() {\n    return {\n      email: ''\n    };\n  },\n  computed: {\n    user: function user() {\n      return this.$store.getters.user;\n    },\n    error: function error() {\n      var template = '';\n      if (!this.$store.getters.error) return null;\n\n      switch (this.$store.getters.error.code) {\n        case 'auth/user-not-found':\n          template = \"<div>Sorry, we can\\'t find an account with this email address. Please try again or \" + \"<router-link to='/sign-up'>create a new account.</router-link></div>\";\n          break;\n\n        default:\n          template = '';\n      }\n\n      return {\n        template: template\n      };\n    },\n    loading: function loading() {\n      return this.$store.getters.loading;\n    }\n  },\n  components: {\n    Spinner: Spinner\n  },\n  methods: {\n    onRecoverPassword: function onRecoverPassword() {\n      this.$store.dispatch(actions.recoverPasswordWithEmail, {\n        email: this.email\n      });\n    }\n  },\n  destroyed: function destroyed() {\n    this.$store.dispatch(actions.clearError);\n  }\n};",{"version":3,"sources":["RecoverPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAA,OAAA;AACA,SAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AACA,UAAA,QAAA,GAAA,EAAA;AACA,UAAA,CAAA,KAAA,MAAA,CAAA,OAAA,CAAA,KAAA,EAAA,OAAA,IAAA;;AACA,cAAA,KAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA,IAAA;AACA,aAAA,qBAAA;AACA,UAAA,QAAA,GAAA,wFACA,sEADA;AAEA;;AACA;AACA,UAAA,QAAA,GAAA,EAAA;AANA;;AAQA,aAAA;AACA,QAAA,QAAA,EAAA;AADA,OAAA;AAGA,KAlBA;AAmBA,IAAA,OAnBA,qBAmBA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA;AACA;AArBA,GAPA;AA8BA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GA9BA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,wBAAA,EAAA;AACA,QAAA,KAAA,EAAA,KAAA;AADA,OAAA;AAGA;AALA,GAjCA;AAwCA,EAAA,SAxCA,uBAwCA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA;AACA;AA1CA,CAAA","sourcesContent":["<template>\n  <div class=\"tile bg\">\n    <div class=\"tile__container\">\n      <h1 class=\"tile__title\">\n        Recover Password\n      </h1>\n      <transition name=\"fade-height\">\n        <div v-bind:is=\"error\" v-if=\"error\" class=\"form__error-message\" />\n      </transition>\n      <form @submit.prevent=\"onRecoverPassword\">\n        <div class=\"input__wrapper\">\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            required\n            placeholder=\"Email\"\n            v-model=\"email\"\n            :class=\"[{ 'input--filled': email }, 'input']\"\n          >\n          <label class=\"input__placeholder\" for=\"email\">\n            Email\n          </label>\n        </div>\n        <div class=\"form__btns\">\n          <button type=\"submit\" class=\"btn btn--primary\" :disabled=\"loading\">\n            Send\n          </button>\n        </div>\n      </form>\n      <div class=\"Spinner__overflow\" v-if=\"loading\">\n        <Spinner />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import Spinner from '../../components/Spinner/Spinner'\n  import { actions } from \"../../helpers/constants\";\n\n  export default {\n    name: 'RecoverPassword',\n    data() {\n      return {\n        email: '',\n      };\n    },\n    computed: {\n      user() {\n        return this.$store.getters.user;\n      },\n      error() {\n        let template = '';\n        if (!this.$store.getters.error) return null;\n        switch (this.$store.getters.error.code) {\n          case ('auth/user-not-found'):\n            template = \"<div>Sorry, we can\\'t find an account with this email address. Please try again or \" +\n              \"<router-link to='/sign-up'>create a new account.</router-link></div>\";\n            break;\n          default:\n            template = '';\n        }\n        return {\n          template: template,\n        };\n      },\n      loading() {\n        return this.$store.getters.loading;\n      }\n    },\n    components: {\n      Spinner,\n    },\n    methods: {\n      onRecoverPassword() {\n        this.$store.dispatch(actions.recoverPasswordWithEmail, {\n          email: this.email,\n        });\n      },\n    },\n    destroyed() {\n      this.$store.dispatch(actions.clearError);\n    },\n  };\n</script>\n"],"sourceRoot":"src/pages/RecoverPassword"}]}