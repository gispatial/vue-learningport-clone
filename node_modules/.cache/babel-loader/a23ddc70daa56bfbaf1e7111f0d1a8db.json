{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/store/user/index.js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/store/user/index.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/babel.config.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1636081673414}],"contextDependencies":[],"result":["import * as firebase from \"firebase\";\nimport router from \"../../router/index\";\nimport { routes, actions } from \"../../helpers/constants\";\nexport default {\n  state: {\n    user: null\n  },\n  mutations: {\n    setUser: function setUser(state, payload) {\n      state.user = payload;\n    }\n  },\n  actions: {\n    signUp: function signUp(_ref, payload) {\n      var _this = this;\n\n      var commit = _ref.commit;\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase.auth().createUserWithEmailAndPassword(payload.email, payload.password).then(function (user) {\n        commit(actions.setLoading, false);\n        var newUser = {\n          id: user.uid,\n          name: user.displayName,\n          email: user.email,\n          photoUrl: user.photoURL\n        };\n        commit(actions.setUser, newUser);\n\n        _this.dispatch(actions.setConfiguration);\n      }).catch(function (error) {\n        commit(actions.setLoading, false);\n        commit(actions.setError, error);\n      });\n    },\n    signIn: function signIn(_ref2, payload) {\n      var _this2 = this;\n\n      var commit = _ref2.commit;\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase.auth().signInWithEmailAndPassword(payload.email, payload.password).then(function (user) {\n        commit(actions.setLoading, false);\n\n        _this2.dispatch(actions.setConfiguration);\n\n        var newUser = {\n          id: user.uid,\n          name: user.displayName,\n          email: user.email,\n          photoUrl: user.photoURL\n        };\n        commit(actions.setUser, newUser);\n      }).catch(function (error) {\n        commit(actions.setLoading, false);\n        commit(actions.setError, error);\n      });\n    },\n    autoSignIn: function autoSignIn(_ref3, payload) {\n      var commit = _ref3.commit;\n      this.dispatch(actions.setConfiguration);\n      commit(actions.setUser, {\n        id: payload.uid,\n        name: payload.displayName,\n        email: payload.email,\n        photoUrl: payload.photoURL\n      });\n    },\n    signInGoogle: function signInGoogle(_ref4) {\n      var _this3 = this;\n\n      var commit = _ref4.commit;\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(function (user) {\n        commit(actions.setLoading, false);\n\n        _this3.dispatch(actions.setConfiguration);\n\n        var newUser = {\n          id: user.uid,\n          name: user.displayName,\n          email: user.email,\n          photoUrl: user.photoURL\n        };\n        commit(actions.setUser, newUser);\n      }).catch(function (error) {\n        commit(actions.setLoading, false);\n        commit(actions.setError, error);\n      });\n    },\n    signInFacebook: function signInFacebook(_ref5) {\n      var _this4 = this;\n\n      var commit = _ref5.commit;\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase.auth().signInWithPopup(new firebase.auth.FacebookAuthProvider()).then(function (user) {\n        commit(actions.setLoading, false);\n\n        _this4.dispatch(actions.setConfiguration);\n\n        var newUser = {\n          id: user.uid,\n          name: user.displayName,\n          email: user.email,\n          photoUrl: user.photoURL\n        };\n        commit(actions.setUser, newUser);\n      }).catch(function (error) {\n        commit(actions.setLoading, false);\n        commit(actions.setError, error);\n      });\n    },\n    signInAnonymously: function signInAnonymously(_ref6) {\n      var _this5 = this;\n\n      var commit = _ref6.commit;\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase.auth().signInAnonymously().then(function (user) {\n        commit(actions.setLoading, false);\n\n        _this5.dispatch(actions.setConfiguration);\n\n        var newUser = {\n          id: user.uid,\n          name: user.displayName,\n          email: user.email,\n          photoUrl: user.photoURL\n        };\n        commit(actions.setUser, newUser);\n      }).catch(function (error) {\n        commit(actions.setLoading, false);\n        commit(actions.setError, error);\n      });\n    },\n    recoverPasswordWithEmail: function recoverPasswordWithEmail(_ref7, payload) {\n      var commit = _ref7.commit;\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase.auth().sendPasswordResetEmail(payload.email).then(function () {\n        commit(actions.setLoading, false);\n        router.push(routes.recoverPasswordSuccess);\n      }).catch(function (error) {\n        commit(actions.setLoading, false);\n        commit(actions.setError, error);\n      });\n    },\n    recoverPassword: function recoverPassword(_ref8, payload) {\n      var _this6 = this;\n\n      var commit = _ref8.commit;\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase.auth().confirmPasswordReset(payload.code, payload.newPassword).then(function (user) {\n        commit(actions.setLoading, false);\n        router.push(routes.home);\n\n        _this6.dispatch(actions.setConfiguration);\n\n        var newUser = {\n          id: user.uid,\n          name: user.displayName,\n          email: user.email,\n          photoUrl: user.photoURL\n        };\n        commit(actions.setUser, newUser);\n      }).catch(function (error) {\n        commit(actions.setLoading, false);\n        commit(actions.setError, error);\n      });\n    },\n    logout: function logout(_ref9) {\n      var commit = _ref9.commit;\n      firebase.auth().signOut().then(function () {\n        commit(actions.setUser, null);\n        router.push(routes.startNow);\n      });\n    }\n  },\n  getters: {\n    user: function user(state) {\n      return state.user;\n    }\n  }\n};",{"version":3,"sources":["/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/store/user/index.js"],"names":["firebase","router","routes","actions","state","user","mutations","setUser","payload","signUp","commit","setLoading","clearError","auth","createUserWithEmailAndPassword","email","password","then","newUser","id","uid","name","displayName","photoUrl","photoURL","dispatch","setConfiguration","catch","error","setError","signIn","signInWithEmailAndPassword","autoSignIn","signInGoogle","signInWithPopup","GoogleAuthProvider","signInFacebook","FacebookAuthProvider","signInAnonymously","recoverPasswordWithEmail","sendPasswordResetEmail","push","recoverPasswordSuccess","recoverPassword","confirmPasswordReset","code","newPassword","home","logout","signOut","startNow","getters"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase\";\nimport router from '../../router/index';\nimport { routes, actions } from '../../helpers/constants';\n\nexport default {\n  state: {\n    user: null,\n  },\n  mutations: {\n    setUser(state, payload) {\n      state.user = payload;\n    },\n  },\n  actions: {\n    signUp({ commit }, payload) {\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(payload.email, payload.password)\n        .then(user => {\n          commit(actions.setLoading, false);\n          const newUser = {\n            id: user.uid,\n            name: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          };\n          commit(actions.setUser, newUser);\n          this.dispatch(actions.setConfiguration);\n        })\n        .catch(error => {\n          commit(actions.setLoading, false);\n          commit(actions.setError, error);\n        });\n    },\n\n    signIn({ commit }, payload) {\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(payload.email, payload.password)\n        .then(user => {\n          commit(actions.setLoading, false);\n          this.dispatch(actions.setConfiguration);\n          const newUser = {\n            id: user.uid,\n            name: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          };\n          commit(actions.setUser, newUser);\n        })\n        .catch(error => {\n          commit(actions.setLoading, false);\n          commit(actions.setError, error);\n        });\n    },\n\n    autoSignIn({ commit }, payload) {\n      this.dispatch(actions.setConfiguration);\n      commit(actions.setUser, {\n        id: payload.uid,\n        name: payload.displayName,\n        email: payload.email,\n        photoUrl: payload.photoURL,\n      });\n    },\n\n    signInGoogle({ commit }) {\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase\n        .auth()\n        .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n        .then(user => {\n          commit(actions.setLoading, false);\n          this.dispatch(actions.setConfiguration);\n          const newUser = {\n            id: user.uid,\n            name: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          };\n          commit(actions.setUser, newUser);\n        })\n        .catch(error => {\n          commit(actions.setLoading, false);\n          commit(actions.setError, error);\n        });\n    },\n\n    signInFacebook({ commit }) {\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase\n        .auth()\n        .signInWithPopup(new firebase.auth.FacebookAuthProvider())\n        .then(user => {\n          commit(actions.setLoading, false);\n          this.dispatch(actions.setConfiguration);\n          const newUser = {\n            id: user.uid,\n            name: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          };\n          commit(actions.setUser, newUser);\n        })\n        .catch(error => {\n          commit(actions.setLoading, false);\n          commit(actions.setError, error);\n        });\n    },\n\n    signInAnonymously({ commit }) {\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase\n        .auth()\n        .signInAnonymously()\n        .then(user => {\n          commit(actions.setLoading, false);\n          this.dispatch(actions.setConfiguration);\n          const newUser = {\n            id: user.uid,\n            name: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          };\n          commit(actions.setUser, newUser);\n        })\n        .catch(error => {\n          commit(actions.setLoading, false);\n          commit(actions.setError, error);\n        });\n    },\n\n    recoverPasswordWithEmail({ commit }, payload) {\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase\n        .auth()\n        .sendPasswordResetEmail(payload.email)\n        .then(() => {\n          commit(actions.setLoading, false);\n          router.push(routes.recoverPasswordSuccess)\n        })\n        .catch(error => {\n          commit(actions.setLoading, false);\n          commit(actions.setError, error);\n        });\n    },\n\n    recoverPassword({ commit }, payload) {\n      commit(actions.setLoading, true);\n      commit(actions.clearError);\n      firebase\n        .auth()\n        .confirmPasswordReset(payload.code, payload.newPassword)\n        .then(user => {\n          commit(actions.setLoading, false);\n          router.push(routes.home);\n          this.dispatch(actions.setConfiguration);\n          const newUser = {\n            id: user.uid,\n            name: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          };\n          commit(actions.setUser, newUser);\n        })\n        .catch(error => {\n          commit(actions.setLoading, false);\n          commit(actions.setError, error);\n        });\n    },\n\n    logout({ commit }) {\n      firebase\n        .auth()\n        .signOut()\n        .then(() => {\n          commit(actions.setUser, null);\n          router.push(routes.startNow);\n        });\n    },\n  },\n  getters: {\n    user(state) {\n      return state.user;\n    },\n  },\n};\n"]}]}