{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/router/index.js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/router/index.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/babel.config.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1636081673414}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport * as firebase from 'firebase';\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport StartNow from '@/pages/StartNow/StartNow';\nimport SignIn from '@/pages/SignIn/SignIn';\nimport SignUp from '@/pages/SignUp/SignUp';\nimport RecoverPassword from '@/pages/RecoverPassword/RecoverPassword';\nimport RecoverPasswordSuccess from '@/pages/RecoverPassword/RecoverPasswordSuccess';\nimport RecoverPasswordForm from '@/pages/RecoverPassword/RecoverPasswordForm';\nimport Home from '@/pages/Home/Home';\nimport Movies from '@/pages/Movies/Movies';\nimport TVShows from '@/pages/TVShows/TVShows';\nimport Popular from '@/pages/Popular/Popular';\nimport MyList from '@/pages/MyList/MyList';\nimport Search from '@/pages/Search/Search';\nimport { routes } from \"../helpers/constants\";\nVue.use(Router);\nvar router = new Router({\n  mode: \"history\",\n  routes: [{\n    path: '*',\n    redirect: '/'\n  }, {\n    path: routes.startNow,\n    name: 'StartNow',\n    component: StartNow\n  }, {\n    path: routes.signIn,\n    name: 'SignIn',\n    component: SignIn\n  }, {\n    path: routes.signUp,\n    name: 'SignUp',\n    component: SignUp\n  }, {\n    path: routes.recoverPassword,\n    name: 'RecoverPassword',\n    component: RecoverPassword\n  }, {\n    path: routes.recoverPasswordSuccess,\n    name: 'RecoverPasswordSuccess',\n    component: RecoverPasswordSuccess\n  }, {\n    path: routes.recoverPasswordCode,\n    name: 'RecoverPasswordForm',\n    component: RecoverPasswordForm\n  }, {\n    path: routes.home,\n    name: 'Home',\n    component: Home,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"\".concat(routes.movies, \"/:id\"),\n    name: 'Movies',\n    component: Movies,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"\".concat(routes.tvShows, \"/:id\"),\n    name: 'TVShows',\n    component: TVShows,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: routes.popular,\n    name: 'Popular',\n    component: Popular,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: routes.myList,\n    name: 'My List',\n    component: MyList,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: \"\".concat(routes.search, \"/:search\"),\n    name: 'Search',\n    component: Search,\n    meta: {\n      requiresAuth: true\n    }\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  var currentUser = firebase.auth().currentUser;\n  var requiresAuth = to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  });\n  if (requiresAuth && !currentUser) next(routes.signIn);else if (!requiresAuth && currentUser) next(routes.home);else next();\n});\nexport default router;",{"version":3,"sources":["/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/router/index.js"],"names":["firebase","Vue","Router","StartNow","SignIn","SignUp","RecoverPassword","RecoverPasswordSuccess","RecoverPasswordForm","Home","Movies","TVShows","Popular","MyList","Search","routes","use","router","mode","path","redirect","startNow","name","component","signIn","signUp","recoverPassword","recoverPasswordSuccess","recoverPasswordCode","home","meta","requiresAuth","movies","tvShows","popular","myList","search","beforeEach","to","from","next","currentUser","auth","matched","some","record"],"mappings":";AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,sBAAP,MAAmC,gDAAnC;AACA,OAAOC,mBAAP,MAAgC,6CAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,MAAT;AAEAd,GAAG,CAACe,GAAJ,CAAQd,MAAR;AAEA,IAAMe,MAAM,GAAG,IAAIf,MAAJ,CAAW;AACxBgB,EAAAA,IAAI,EAAE,SADkB;AAExBH,EAAAA,MAAM,EAAE,CACN;AACEI,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADM,EAKN;AACED,IAAAA,IAAI,EAAEJ,MAAM,CAACM,QADf;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,SAAS,EAAEpB;AAHb,GALM,EAUN;AACEgB,IAAAA,IAAI,EAAEJ,MAAM,CAACS,MADf;AAEEF,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,SAAS,EAAEnB;AAHb,GAVM,EAeN;AACEe,IAAAA,IAAI,EAAEJ,MAAM,CAACU,MADf;AAEEH,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,SAAS,EAAElB;AAHb,GAfM,EAoBN;AACEc,IAAAA,IAAI,EAAEJ,MAAM,CAACW,eADf;AAEEJ,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,SAAS,EAAEjB;AAHb,GApBM,EAyBN;AACEa,IAAAA,IAAI,EAAEJ,MAAM,CAACY,sBADf;AAEEL,IAAAA,IAAI,EAAE,wBAFR;AAGEC,IAAAA,SAAS,EAAEhB;AAHb,GAzBM,EA8BN;AACEY,IAAAA,IAAI,EAAEJ,MAAM,CAACa,mBADf;AAEEN,IAAAA,IAAI,EAAE,qBAFR;AAGEC,IAAAA,SAAS,EAAEf;AAHb,GA9BM,EAmCN;AACEW,IAAAA,IAAI,EAAEJ,MAAM,CAACc,IADf;AAEEP,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAEd,IAHb;AAIEqB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GAnCM,EA2CN;AACEZ,IAAAA,IAAI,YAAKJ,MAAM,CAACiB,MAAZ,SADN;AAEEV,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,SAAS,EAAEb,MAHb;AAIEoB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GA3CM,EAmDN;AACEZ,IAAAA,IAAI,YAAKJ,MAAM,CAACkB,OAAZ,SADN;AAEEX,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,SAAS,EAAEZ,OAHb;AAIEmB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GAnDM,EA2DN;AACEZ,IAAAA,IAAI,EAAEJ,MAAM,CAACmB,OADf;AAEEZ,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,SAAS,EAAEX,OAHb;AAIEkB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GA3DM,EAmEN;AACEZ,IAAAA,IAAI,EAAEJ,MAAM,CAACoB,MADf;AAEEb,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,SAAS,EAAEV,MAHb;AAIEiB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GAnEM,EA2EN;AACEZ,IAAAA,IAAI,YAAKJ,MAAM,CAACqB,MAAZ,aADN;AAEEd,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,SAAS,EAAET,MAHb;AAIEgB,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GA3EM;AAFgB,CAAX,CAAf;AAwFAd,MAAM,CAACoB,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC,MAAMC,WAAW,GAAGzC,QAAQ,CAAC0C,IAAT,GAAgBD,WAApC;AACA,MAAMV,YAAY,GAAGO,EAAE,CAACK,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACf,IAAP,CAAYC,YAAhB;AAAA,GAAtB,CAArB;AAEA,MAAIA,YAAY,IAAI,CAACU,WAArB,EAAkCD,IAAI,CAACzB,MAAM,CAACS,MAAR,CAAJ,CAAlC,KACK,IAAI,CAACO,YAAD,IAAiBU,WAArB,EAAkCD,IAAI,CAACzB,MAAM,CAACc,IAAR,CAAJ,CAAlC,KACAW,IAAI;AACV,CAPD;AASA,eAAevB,MAAf","sourcesContent":["import * as firebase from 'firebase';\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport StartNow from '@/pages/StartNow/StartNow';\nimport SignIn from '@/pages/SignIn/SignIn';\nimport SignUp from '@/pages/SignUp/SignUp';\nimport RecoverPassword from '@/pages/RecoverPassword/RecoverPassword';\nimport RecoverPasswordSuccess from '@/pages/RecoverPassword/RecoverPasswordSuccess';\nimport RecoverPasswordForm from '@/pages/RecoverPassword/RecoverPasswordForm';\nimport Home from '@/pages/Home/Home';\nimport Movies from '@/pages/Movies/Movies';\nimport TVShows from '@/pages/TVShows/TVShows';\nimport Popular from '@/pages/Popular/Popular';\nimport MyList from '@/pages/MyList/MyList';\nimport Search from '@/pages/Search/Search';\nimport { routes } from '../helpers/constants';\n\nVue.use(Router);\n\nconst router = new Router({\n  mode: \"history\",\n  routes: [\n    {\n      path: '*',\n      redirect: '/',\n    },\n    {\n      path: routes.startNow,\n      name: 'StartNow',\n      component: StartNow,\n    },\n    {\n      path: routes.signIn,\n      name: 'SignIn',\n      component: SignIn,\n    },\n    {\n      path: routes.signUp,\n      name: 'SignUp',\n      component: SignUp,\n    },\n    {\n      path: routes.recoverPassword,\n      name: 'RecoverPassword',\n      component: RecoverPassword,\n    },\n    {\n      path: routes.recoverPasswordSuccess,\n      name: 'RecoverPasswordSuccess',\n      component: RecoverPasswordSuccess,\n    },\n    {\n      path: routes.recoverPasswordCode,\n      name: 'RecoverPasswordForm',\n      component: RecoverPasswordForm,\n    },\n    {\n      path: routes.home,\n      name: 'Home',\n      component: Home,\n      meta: {\n        requiresAuth: true,\n      },\n    },\n    {\n      path: `${routes.movies}/:id` ,\n      name: 'Movies',\n      component: Movies,\n      meta: {\n        requiresAuth: true,\n      },\n    },\n    {\n      path: `${routes.tvShows}/:id`,\n      name: 'TVShows',\n      component: TVShows,\n      meta: {\n        requiresAuth: true,\n      },\n    },\n    {\n      path: routes.popular,\n      name: 'Popular',\n      component: Popular,\n      meta: {\n        requiresAuth: true,\n      },\n    },\n    {\n      path: routes.myList,\n      name: 'My List',\n      component: MyList,\n      meta: {\n        requiresAuth: true,\n      },\n    },\n    {\n      path: `${routes.search}/:search`,\n      name: 'Search',\n      component: Search,\n      meta: {\n        requiresAuth: true,\n      },\n    },\n  ],\n});\n\nrouter.beforeEach((to, from, next) => {\n  const currentUser = firebase.auth().currentUser;\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n\n  if (requiresAuth && !currentUser) next(routes.signIn);\n  else if (!requiresAuth && currentUser) next(routes.home);\n  else next();\n});\n\nexport default router;\n"]}]}