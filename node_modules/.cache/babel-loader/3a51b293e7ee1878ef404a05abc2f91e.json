{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/Slider/Slider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/Slider/Slider.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/babel.config.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _toConsumableArray from \"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { props, handlers, helpers, preparations, watchers } from \"../../services/SliderService\";\nimport Spinner from \"../../components/Spinner/Spinner.vue\";\nexport default {\n  name: 'slider',\n  mixins: [handlers, helpers, preparations, props, watchers],\n  data: function data() {\n    return {\n      slides: [],\n      slidesClonedBefore: [],\n      slidesClonedAfter: [],\n      autoplayInterval: null,\n      autoplayTimeout: null,\n      pauseAutoPlay: false,\n      autoplayStart: null,\n      autoplayRemaining: null,\n      currentSlide: null,\n      mouseDown: false,\n      dragStartX: 0,\n      dragStartY: 0,\n      dragDistance: 0,\n      swipeDistance: 50,\n      translateX: 0,\n      transitionDelay: 0,\n      widthWindow: 0,\n      widthContainer: 0,\n      widthSlide: 0,\n      settings: {},\n      loading: false\n    };\n  },\n  components: {\n    Spinner: Spinner\n  },\n  computed: {\n    sliderClasses: function sliderClasses() {\n      return {\n        'Slider--auto-play': this.settings.autoplay,\n        'Slider--disabled': this.settings.disabled,\n        'Slider--fade': this.settings.fade && !this.settings.disabled,\n        'Slider--rtl': this.settings.rtl\n      };\n    },\n    canGoToPrev: function canGoToPrev() {\n      return this.settings.infinite || this.currentSlide > 0;\n    },\n    canGoToNext: function canGoToNext() {\n      return this.settings.infinite || this.currentSlide < this.slidesCount - 1;\n    },\n    clonedSlides: function clonedSlides() {\n      return !this.settings.disabled && !this.settings.fade && this.settings.infinite;\n    },\n    breakpoints: function breakpoints() {\n      if (!this.initialSettings.responsive) return [];\n      return this.initialSettings.responsive.map(function (item) {\n        return item.breakpoint;\n      });\n    },\n    currentBreakpoint: function currentBreakpoint() {\n      var _this = this;\n\n      var breakpoints = this.breakpoints.map(function (item) {\n        return item;\n      }).reverse();\n      if (this.initialSettings.mobileFirst) return breakpoints.find(function (item) {\n        return item < _this.widthWindow;\n      }) || 0;\n      return breakpoints.find(function (item) {\n        return item > _this.widthWindow;\n      }) || null;\n    },\n    allSlides: function allSlides() {\n      if (this.clonedSlides) return [].concat(_toConsumableArray(this.slidesClonedBefore), _toConsumableArray(this.slides), _toConsumableArray(this.slidesClonedAfter));\n      return this.slides;\n    },\n    slidesCount: function slidesCount() {\n      return this.slides.length;\n    },\n    allSlidesCount: function allSlidesCount() {\n      return this.allSlides.length;\n    },\n    marginX: function marginX() {\n      var marginX = this.clonedSlides ? this.slidesCount * this.widthSlide : 0;\n\n      if (this.settings.centerMode) {\n        marginX -= (Math.floor(this.settings.slidesToShow / 2) - +(this.settings.slidesToShow % 2 === 0)) * this.widthSlide;\n      }\n\n      return this.settings.rtl ? marginX : -1 * marginX;\n    }\n  },\n  methods: {\n    reload: function reload() {\n      this.getWidth();\n      this.prepareSettings();\n      this.prepareSlides();\n      this.prepareCarousel();\n      this.toggleFade();\n    },\n    toggleFade: function toggleFade() {\n      var enabled = !this.settings.disabled && this.settings.fade;\n\n      for (var i = 0; i < this.slidesCount; i++) {\n        this.slides[i].style.transition = enabled ? \"opacity \".concat(this.settings.timing, \" \").concat(this.settings.speed, \"ms\") : 'none';\n        this.slides[i].style.transform = enabled ? \"translate(-\".concat(i * this.widthSlide, \"px)\") : 'none';\n      }\n    },\n    toggleAutoPlay: function toggleAutoPlay() {\n      var _this2 = this;\n\n      var enabled = !this.settings.disabled && this.settings.autoplay;\n\n      if (!this.autoplayInterval && enabled) {\n        this.autoplayInterval = setInterval(function () {\n          if (!document.hidden) {\n            if (!_this2.canGoToNext) _this2.disableAutoPlay();else _this2.goToNext();\n          }\n        }, this.settings.autoplaySpeed);\n      } else {\n        this.disableAutoPlay();\n      }\n    },\n    toggleLoading: function toggleLoading() {\n      this.loading = !this.loading;\n    },\n    restartAutoPlay: function restartAutoPlay() {\n      this.disableAutoPlay();\n      this.toggleAutoPlay();\n    },\n    disableAutoPlay: function disableAutoPlay() {\n      clearInterval(this.autoplayInterval);\n      this.autoplayInterval = null;\n    },\n    clearAutoPlayPause: function clearAutoPlayPause() {\n      clearTimeout(this.autoplayTimeout);\n      this.autoplayRemaining = null;\n    },\n    disableScroll: function disableScroll() {\n      document.ontouchmove = function (e) {\n        return e.preventDefault();\n      };\n    },\n    enableScroll: function enableScroll() {\n      document.ontouchmove = function () {\n        return true;\n      };\n    },\n    getCurrentSlide: function getCurrentSlide() {\n      return this.currentSlide;\n    },\n    getCurrentBreakpoint: function getCurrentBreakpoint() {\n      return this.currentBreakpoint;\n    },\n    getCurrentSettings: function getCurrentSettings() {\n      return this.settings;\n    },\n    getInitialSettings: function getInitialSettings() {\n      return this.initialSettings;\n    },\n    goToNext: function goToNext() {\n      if (this.canGoToNext) {\n        this.goTo(this.currentSlide + 1 * this.settings.slidesToScroll);\n      }\n    },\n    goToPrev: function goToPrev() {\n      if (this.canGoToPrev) {\n        this.goTo(this.currentSlide - 1 * this.settings.slidesToScroll);\n      }\n    },\n    goTo: function goTo(n) {\n      var _this3 = this;\n\n      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var asNav = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      if (this.settings.disabled) return false;\n\n      if (!asNav) {\n        this.settings.asNavFor.forEach(function (carousel) {\n          if (carousel) carousel.goTo(n, transition, true);\n        });\n      }\n\n      var realNextSlide = n;\n\n      if (transition) {\n        if (this.settings.infinite && n < 0) {\n          realNextSlide = this.slidesCount - 1;\n        } else if (n >= this.slidesCount) {\n          realNextSlide = 0;\n        }\n\n        this.$emit('beforeChange', {\n          currentSlide: this.currentSlide,\n          nextSlide: realNextSlide\n        });\n        this.currentSlide = realNextSlide;\n\n        if (n !== realNextSlide) {\n          setTimeout(function () {\n            _this3.goTo(realNextSlide, false);\n          }, this.settings.speed);\n        }\n      }\n\n      var translateX = !this.settings.fade ? n * this.widthSlide : 0;\n      this.transitionDelay = transition ? this.speed : 0;\n      this.translateX = this.settings.rtl ? translateX : -1 * translateX;\n    }\n  },\n  created: function created() {\n    // Read settings from options object\n    if (this.options) {\n      for (var key in this.options) {\n        this.initialSettings[key] = this.options[key];\n      }\n    } // Sort breakpoints\n\n\n    if (this.initialSettings.responsive) {\n      this.initialSettings.responsive.sort(this.compare);\n    } // Set first load settings\n\n\n    Object.assign(this.settings, this.initialSettings);\n  },\n  mounted: function mounted() {\n    window.addEventListener('resize', this.getWidth);\n\n    if ('ontouchstart' in window) {\n      this.$refs.track.addEventListener('touchstart', this.handleMouseDown);\n      this.$refs.track.addEventListener('touchend', this.handleMouseUp);\n      this.$refs.track.addEventListener('touchmove', this.handleMouseMove);\n    } else {\n      this.$refs.track.addEventListener('mousedown', this.handleMouseDown);\n      this.$refs.track.addEventListener('mouseup', this.handleMouseUp);\n      this.$refs.track.addEventListener('mousemove', this.handleMouseMove);\n    }\n\n    this.reload();\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.getWidth);\n    this.$refs.track.removeEventListener('ontouchstart' in window ? 'touchstart' : 'mousedown', this.handleMouseDown);\n    this.$refs.track.removeEventListener('ontouchstart' in window ? 'touchend' : 'mouseup', this.handleMouseUp);\n    this.$refs.track.removeEventListener('ontouchstart' in window ? 'touchmove' : 'mousemove', this.handleMouseMove);\n    this.disableAutoPlay();\n  }\n};",{"version":3,"sources":["Slider.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"Slider\" :class=\"sliderClasses\">\n    <div ref=\"list\" class=\"Slider__list\">\n      <div\n        ref=\"track\"\n        class=\"Slider__track\"\n        :style=\"{transform: `translate(${translateX + marginX}px)`, transition: `transform ${settings.timing} ${transitionDelay}ms`}\"\n        @mouseover=\"handleMouseOver('track')\"\n        @mouseout=\"handleMouseOut('track')\"\n      >\n        <div\n          :class=\"['Slider__slides', 'Slider__slides--cloned', settings.extraClass]\"\n          ref=\"slidesClonedBefore\"\n          v-if=\"clonedSlides\"\n        >\n          <slot />\n        </div>\n        <div :class=\"['Slider__slides', 'Slider__slides--regular', settings.extraClass]\" ref=\"slides\">\n          <slot />\n        </div>\n        <div\n          :class=\"['Slider__slides', 'Slider__slides--cloned', settings.extraClass]\"\n          ref=\"slidesClonedAfter\"\n          v-if=\"clonedSlides\"\n        >\n          <slot />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"Slider__actions\" v-if=\"!settings.disabled && (settings.navButtons || settings.dots)\">\n      <button\n        type=\"button\"\n        ref=\"prevButton\"\n        v-if=\"settings.navButtons && !settings.disabled\"\n        class=\"Slider__nav-button Slider__nav-button--prev\"\n        :disabled=\"!canGoToPrev\"\n        @click=\"goToPrev(), restartAutoPlay()\"\n      >\n        <slot name=\"prevButton\">←</slot>\n      </button>\n\n      <ul ref=\"dots\" v-if=\"settings.dots && !settings.disabled\" class=\"Slider__dots\">\n        <li\n          v-for=\"n in slidesCount\"\n          :key=\"n\" class=\"Slider__dot\"\n          :class=\"{'Slider__dot--current': n - 1 === currentSlide}\"\n          @mouseover=\"handleMouseOver('dot')\"\n          @mouseout=\"handleMouseOut('dot')\"\n        >\n          <button @click=\"goTo(n - 1), restartAutoPlay()\" type=\"button\">{{n}}</button>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        ref=\"nextButton\"\n        v-if=\"settings.navButtons && !settings.disabled\"\n        class=\"Slider__nav-button Slider__nav-button--next\"\n        :disabled=\"!canGoToNext\"\n        @click=\"goToNext(), restartAutoPlay()\"\n      >\n        <slot name=\"nextButton\">→</slot>\n      </button>\n    </div>\n\n    <div class=\"Spinner__overflow\" v-if=\"loading\">\n      <Spinner />\n    </div>\n  </div>\n</template>\n\n<script>\n  import { props, handlers, helpers, preparations, watchers } from '../../services/SliderService';\n  import Spinner from '../../components/Spinner/Spinner.vue';\n\n  export default {\n    name: 'slider',\n    mixins: [handlers, helpers, preparations, props, watchers],\n    data () {\n      return {\n        slides: [],\n        slidesClonedBefore: [],\n        slidesClonedAfter: [],\n        autoplayInterval: null,\n        autoplayTimeout: null,\n        pauseAutoPlay: false,\n        autoplayStart: null,\n        autoplayRemaining: null,\n        currentSlide: null,\n        mouseDown: false,\n        dragStartX: 0,\n        dragStartY: 0,\n        dragDistance: 0,\n        swipeDistance: 50,\n        translateX: 0,\n        transitionDelay: 0,\n        widthWindow: 0,\n        widthContainer: 0,\n        widthSlide: 0,\n        settings: {},\n        loading: false,\n      };\n    },\n    components: {\n      Spinner,\n    },\n    computed: {\n      sliderClasses() {\n        return {\n          'Slider--auto-play': this.settings.autoplay,\n          'Slider--disabled': this.settings.disabled,\n          'Slider--fade': this.settings.fade && !this.settings.disabled,\n          'Slider--rtl': this.settings.rtl\n        };\n      },\n      canGoToPrev() {\n        return this.settings.infinite || this.currentSlide > 0;\n      },\n      canGoToNext() {\n        return this.settings.infinite || this.currentSlide < this.slidesCount - 1;\n      },\n      clonedSlides() {\n        return !this.settings.disabled && !this.settings.fade && this.settings.infinite;\n      },\n      breakpoints() {\n        if (!this.initialSettings.responsive) return [];\n        return this.initialSettings.responsive.map(item => item.breakpoint);\n      },\n      currentBreakpoint() {\n        let breakpoints = this.breakpoints.map(item => item).reverse();\n        if (this.initialSettings.mobileFirst) return breakpoints.find(item => item < this.widthWindow) || 0;\n        return breakpoints.find(item => item > this.widthWindow) || null;\n      },\n      allSlides() {\n        if (this.clonedSlides) return [...this.slidesClonedBefore, ...this.slides, ...this.slidesClonedAfter];\n        return this.slides;\n      },\n      slidesCount() {\n        return this.slides.length;\n      },\n      allSlidesCount() {\n        return this.allSlides.length;\n      },\n      marginX() {\n        let marginX = (this.clonedSlides) ? this.slidesCount * this.widthSlide : 0;\n        if (this.settings.centerMode) {\n          marginX -= (Math.floor(this.settings.slidesToShow / 2) - +(this.settings.slidesToShow % 2 === 0)) * this.widthSlide;\n        }\n        return (this.settings.rtl) ? marginX : -1 * marginX;\n      }\n    },\n    methods: {\n      reload() {\n        this.getWidth();\n        this.prepareSettings();\n        this.prepareSlides();\n        this.prepareCarousel();\n        this.toggleFade();\n      },\n      toggleFade() {\n        let enabled = (!this.settings.disabled && this.settings.fade);\n        for (let i = 0; i < this.slidesCount; i++) {\n          this.slides[i].style.transition = (enabled)\n            ? `opacity ${this.settings.timing} ${this.settings.speed}ms`\n            : 'none';\n          this.slides[i].style.transform = (enabled)\n            ? `translate(-${i * this.widthSlide}px)`\n            : 'none';\n        }\n      },\n      toggleAutoPlay() {\n        let enabled = (!this.settings.disabled && this.settings.autoplay);\n        if (!this.autoplayInterval && enabled) {\n          this.autoplayInterval = setInterval(() => {\n            if (!document.hidden) {\n              if (!this.canGoToNext) this.disableAutoPlay();\n              else this.goToNext();\n            }\n          }, this.settings.autoplaySpeed)\n        } else {\n          this.disableAutoPlay();\n        }\n      },\n      toggleLoading() {\n        this.loading = !this.loading;\n      },\n      restartAutoPlay() {\n        this.disableAutoPlay();\n        this.toggleAutoPlay();\n      },\n      disableAutoPlay() {\n        clearInterval(this.autoplayInterval);\n        this.autoplayInterval = null;\n      },\n      clearAutoPlayPause() {\n        clearTimeout(this.autoplayTimeout);\n        this.autoplayRemaining = null;\n      },\n      disableScroll() {\n        document.ontouchmove = e => e.preventDefault();\n      },\n      enableScroll() {\n        document.ontouchmove = () => true;\n      },\n      getCurrentSlide() {\n        return this.currentSlide;\n      },\n      getCurrentBreakpoint() {\n        return this.currentBreakpoint;\n      },\n      getCurrentSettings() {\n        return this.settings;\n      },\n      getInitialSettings() {\n        return this.initialSettings;\n      },\n      goToNext() {\n        if (this.canGoToNext) {\n          this.goTo(this.currentSlide + 1 * this.settings.slidesToScroll);\n        }\n      },\n      goToPrev() {\n        if (this.canGoToPrev) {\n          this.goTo(this.currentSlide - 1 * this.settings.slidesToScroll);\n        }\n      },\n      goTo(n, transition = true, asNav = false) {\n        if (this.settings.disabled) return false;\n\n        if (!asNav) {\n          this.settings.asNavFor.forEach(carousel => {\n            if (carousel) carousel.goTo(n, transition, true);\n          });\n        }\n\n        let realNextSlide = n;\n\n        if (transition) {\n          if (this.settings.infinite && n < 0) {\n            realNextSlide = this.slidesCount - 1;\n          } else if (n >= this.slidesCount) {\n            realNextSlide = 0;\n          }\n\n          this.$emit('beforeChange', { currentSlide: this.currentSlide, nextSlide: realNextSlide });\n\n          this.currentSlide = realNextSlide;\n\n          if (n !== realNextSlide) {\n            setTimeout(() => {\n              this.goTo(realNextSlide, false);\n            }, this.settings.speed)\n          }\n        }\n\n        let translateX = (!this.settings.fade) ? n * this.widthSlide : 0;\n        this.transitionDelay = (transition) ? this.speed : 0;\n        this.translateX = (this.settings.rtl) ? translateX : -1 * translateX;\n      },\n    },\n    created() {\n      // Read settings from options object\n      if (this.options) {\n        for (let key in this.options) {\n          this.initialSettings[key] = this.options[key];\n        }\n      }\n      // Sort breakpoints\n      if (this.initialSettings.responsive) {\n        this.initialSettings.responsive.sort(this.compare);\n      }\n      // Set first load settings\n      Object.assign(this.settings, this.initialSettings);\n    },\n    mounted() {\n      window.addEventListener('resize', this.getWidth);\n      if ('ontouchstart' in window) {\n        this.$refs.track.addEventListener('touchstart', this.handleMouseDown);\n        this.$refs.track.addEventListener('touchend', this.handleMouseUp);\n        this.$refs.track.addEventListener('touchmove', this.handleMouseMove);\n      } else {\n        this.$refs.track.addEventListener('mousedown', this.handleMouseDown);\n        this.$refs.track.addEventListener('mouseup', this.handleMouseUp);\n        this.$refs.track.addEventListener('mousemove', this.handleMouseMove);\n      }\n      this.reload();\n    },\n    beforeDestroy() {\n      window.removeEventListener('resize', this.getWidth);\n\n      this.$refs.track.removeEventListener(('ontouchstart' in window) ? 'touchstart' : 'mousedown', this.handleMouseDown);\n      this.$refs.track.removeEventListener(('ontouchstart' in window) ? 'touchend' : 'mouseup', this.handleMouseUp);\n      this.$refs.track.removeEventListener(('ontouchstart' in window) ? 'touchmove' : 'mousemove', this.handleMouseMove);\n\n      this.disableAutoPlay();\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"Slider\";\n</style>\n"],"sourceRoot":"src/components/Slider"}]}