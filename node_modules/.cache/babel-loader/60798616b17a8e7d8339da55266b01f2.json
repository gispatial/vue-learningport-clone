{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/Header/AuthorizedHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/Header/AuthorizedHeader.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/babel.config.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ProfileDropdown from \"../ProfileDropdown/ProfileDropdown\";\nimport NetflixLogo from \"../../assets/images/netflix.svg\";\nimport debounce from \"../../helpers/debounce\";\nimport { routes, actions } from \"../../helpers/constants\";\nexport default {\n  name: 'AuthorizedHeader',\n  data: function data() {\n    return {\n      search: '',\n      isScrolled: false,\n      isMenuOpened: false,\n      homeRoute: routes.home,\n      navList: [{\n        title: 'Home',\n        link: routes.home\n      }, {\n        title: 'TV Shows',\n        link: routes.tvShows,\n        nav: []\n      }, {\n        title: 'Movies',\n        link: routes.movies,\n        nav: []\n      }, {\n        title: 'New & Popular',\n        link: routes.popular\n      }, {\n        title: 'My List',\n        link: routes.myList\n      }]\n    };\n  },\n  computed: {\n    path: function path() {\n      return this.$route.path;\n    },\n    genres: function genres() {\n      return this.$store.getters.genres;\n    }\n  },\n  components: {\n    ProfileDropdown: ProfileDropdown,\n    NetflixLogo: NetflixLogo\n  },\n  watch: {\n    path: function path() {\n      this.isMenuOpened = false;\n    },\n    genres: function genres(value) {\n      if (value !== null && value !== undefined) {\n        this.navList = this.navList.map(function (item) {\n          if (item.title === 'TV Shows') return _objectSpread(_objectSpread({}, item), {}, {\n            nav: value.tv\n          });\n          if (item.title === 'Movies') return _objectSpread(_objectSpread({}, item), {}, {\n            nav: value.movies\n          });\n          return item;\n        });\n      }\n    },\n    search: debounce(function (value) {\n      this.$router.push(\"\".concat(routes.search, \"/\").concat(value));\n    }, 600)\n  },\n  methods: {\n    handleScroll: function handleScroll() {\n      var currentScrollPosition = window.pageYOffset || document.documentElement.scrollTop;\n      if (currentScrollPosition > 30) return this.isScrolled = true;else return this.isScrolled = false;\n    },\n    toggleSidebar: function toggleSidebar() {\n      this.isMenuOpened = !this.isMenuOpened;\n      if (this.isMenuOpened) document.documentElement.classList.add('no-scroll');else document.documentElement.classList.remove('no-scroll');\n    }\n  },\n  created: function created() {\n    window.addEventListener('scroll', this.handleScroll);\n  },\n  mounted: function mounted() {\n    if (this.$route.params.search) {\n      this.search = this.$route.params.search;\n    }\n\n    return this.$store.dispatch(actions.setGenres);\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n};",{"version":3,"sources":["AuthorizedHeader.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <header :class=\"[{ 'Header--bg': isScrolled }, 'Header']\">\n    <router-link :to=\"homeRoute\">\n      <NetflixLogo class=\"Header__logo\" />\n    </router-link>\n\n    <nav :class=\"[{ 'Header__nav--opened': isMenuOpened }, 'Header__nav']\">\n      <ul class=\"Header__nav-list\">\n        <li class=\"Header__nav-item\" v-for=\"(navItem, index) in navList\" :key=\"index\">\n          <router-link v-if=\"!navItem.nav\" class=\"Header__nav-link\" :to=\"navItem.link\">\n            {{ navItem.title }}\n          </router-link>\n          <div v-else class=\"Header__nav-link\">\n            {{ navItem.title }}\n            <div class=\"dropdown\">\n              <div class=\"dropdown__list\" v-for=\"(dropdownItem, index) in navItem.nav\" :key=\"index\">\n                <router-link class=\"dropdown__btn\" :to=\"`${navItem.link}/${dropdownItem.id}`\">\n                  {{ dropdownItem.name }}\n                </router-link>\n              </div>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </nav>\n\n    <div class=\"Header__search\" :class=\"[{ 'Header__search--active': search }, 'Header__search']\">\n      <label class=\"flex-jc\">\n        <font-awesome-icon :icon=\"['fas', 'search']\" class=\"Header__search-icon\" />\n        <input\n          name=\"search\"\n          type=\"text\"\n          placeholder=\"Titles, characters, geners\"\n          v-model=\"search\"\n          class=\"Header__search-input\"\n        >\n      </label>\n    </div>\n\n    <div class=\"Header__actions\">\n      <ProfileDropdown />\n      <button :class=\"[{ 'hamburger--active': isMenuOpened }, 'hamburger', 'button']\" v-on:click=\"toggleSidebar\">\n        <span />\n        <span />\n        <span />\n      </button>\n    </div>\n  </header>\n</template>\n\n<script>\n  import ProfileDropdown from '../ProfileDropdown/ProfileDropdown';\n  import NetflixLogo from '../../assets/images/netflix.svg';\n  import debounce from '../../helpers/debounce';\n  import { routes, actions } from '../../helpers/constants';\n\n  export default {\n    name: 'AuthorizedHeader',\n    data() {\n      return {\n        search: '',\n        isScrolled: false,\n        isMenuOpened: false,\n        homeRoute: routes.home,\n        navList: [\n          { title: 'Home', link: routes.home },\n          { title: 'TV Shows', link: routes.tvShows, nav: [] },\n          { title: 'Movies', link: routes.movies, nav: [] },\n          { title: 'New & Popular', link: routes.popular },\n          { title: 'My List', link: routes.myList },\n        ],\n      };\n    },\n    computed: {\n      path() {\n        return this.$route.path;\n      },\n      genres() {\n        return this.$store.getters.genres;\n      },\n    },\n    components: {\n      ProfileDropdown,\n      NetflixLogo,\n    },\n    watch: {\n      path() {\n        this.isMenuOpened = false;\n      },\n      genres(value) {\n        if (value !== null && value !== undefined) {\n          this.navList = this.navList.map(item => {\n            if (item.title === 'TV Shows') return { ...item, nav: value.tv };\n            if (item.title === 'Movies') return { ...item, nav: value.movies };\n            return item;\n          });\n        }\n      },\n      search: debounce(function(value) {\n        this.$router.push(`${routes.search}/${value}`);\n      }, 600),\n    },\n    methods: {\n      handleScroll() {\n        const currentScrollPosition = window.pageYOffset || document.documentElement.scrollTop;\n        if (currentScrollPosition > 30) return this.isScrolled = true;\n        else return this.isScrolled = false;\n      },\n      toggleSidebar() {\n        this.isMenuOpened = !this.isMenuOpened;\n        if (this.isMenuOpened) document.documentElement.classList.add('no-scroll');\n        else document.documentElement.classList.remove('no-scroll');\n      },\n    },\n    created() {\n      window.addEventListener('scroll', this.handleScroll);\n    },\n    mounted() {\n      if (this.$route.params.search) {\n        this.search = this.$route.params.search;\n      }\n      return this.$store.dispatch(actions.setGenres);\n    },\n    destroyed() {\n      window.removeEventListener('scroll', this.handleScroll);\n    },\n  };\n</script>\n\n<style lang=\"scss\">\n  @import \"./Header.scss\";\n</style>\n"],"sourceRoot":"src/components/Header"}]}