{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieSliderItem/MovieSliderItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieSliderItem/MovieSliderItem.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/babel.config.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MovieLabels from \"../MovieLabels/MovieLabels\";\nimport _getImageUrl from \"../../helpers/getImageUrl\";\nexport default {\n  name: 'MovieSliderItem',\n  props: {\n    movie: {\n      name: String,\n      title: String,\n      overview: String,\n      backdrop_path: String\n    }\n  },\n  components: {\n    MovieLabels: MovieLabels\n  },\n  methods: {\n    getImageUrl: function getImageUrl(url, size) {\n      return _getImageUrl(url, size, 'backdrop');\n    },\n    selectMovie: function selectMovie(movie) {\n      var slide = this.$el.parentNode;\n      var slider = slide.parentNode;\n      slider.childNodes.forEach(function (slide) {\n        return slide.classList.remove('Slider__slide--selected');\n      });\n      slide.classList.add('Slider__slide--selected');\n      this.$emit('select-movie', movie);\n    }\n  }\n};",{"version":3,"sources":["MovieSliderItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA,OAAA,WAAA;AACA,OAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,KAAA,EAAA,MAFA;AAGA,MAAA,QAAA,EAAA,MAHA;AAIA,MAAA,aAAA,EAAA;AAJA;AADA,GAFA;AAUA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GAVA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,GADA,EACA,IADA,EACA;AACA,aAAA,YAAA,CAAA,GAAA,EAAA,IAAA,EAAA,UAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAJA,uBAIA,KAJA,EAIA;AACA,UAAA,KAAA,GAAA,KAAA,GAAA,CAAA,UAAA;AACA,UAAA,MAAA,GAAA,KAAA,CAAA,UAAA;AACA,MAAA,MAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAA,yBAAA,CAAA;AAAA,OAAA;AACA,MAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA,yBAAA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,KAAA;AACA;AAVA;AAbA,CAAA","sourcesContent":["<template>\n  <div\n    class=\"MovieSliderItem\"\n    :style=\"{ backgroundImage: 'url(' + getImageUrl(movie.backdrop_path, 1) + ')' }\"\n  >\n    <div class=\"MovieSliderItem__details\">\n      <h3 class=\"MovieSliderItem__title\">\n        {{ movie.title || movie.name }}\n      </h3>\n      <MovieLabels :movie=\"movie\" />\n      <button class=\"MovieSliderItem__btn\" @click=\"selectMovie(movie)\">\n        <font-awesome-icon :icon=\"['fas', 'info-circle']\"/>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\n  import MovieLabels from '../MovieLabels/MovieLabels'\n  import getImageUrl from '../../helpers/getImageUrl';\n\n  export default {\n    name: 'MovieSliderItem',\n    props: {\n      movie: {\n        name: String,\n        title: String,\n        overview: String,\n        backdrop_path: String,\n      },\n    },\n    components: {\n      MovieLabels,\n    },\n    methods: {\n      getImageUrl(url, size) {\n        return getImageUrl(url, size, 'backdrop');\n      },\n      selectMovie(movie) {\n        const slide = this.$el.parentNode;\n        const slider = slide.parentNode;\n        slider.childNodes.forEach(slide => slide.classList.remove('Slider__slide--selected'));\n        slide.classList.add('Slider__slide--selected');\n        this.$emit('select-movie', movie);\n      },\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n  @import \"MovieSliderItem\";\n</style>\n"],"sourceRoot":"src/components/MovieSliderItem"}]}