{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/store/shared/index.js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/store/shared/index.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/babel.config.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1636081673414}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { actions } from \"../../helpers/constants\";\nexport default {\n  state: {\n    loading: false,\n    configuration: null,\n    genres: null,\n    error: null\n  },\n  mutations: {\n    setLoading: function setLoading(state, payload) {\n      state.loading = payload;\n    },\n    setError: function setError(state, payload) {\n      state.error = payload;\n    },\n    clearError: function clearError(state) {\n      state.error = null;\n    },\n    setConfiguration: function setConfiguration(state, payload) {\n      state.configuration = payload;\n    },\n    setGenres: function setGenres(state, payload) {\n      state.genres = payload;\n    }\n  },\n  actions: {\n    clearError: function clearError(_ref) {\n      var commit = _ref.commit;\n      commit(actions.clearError);\n    },\n    setError: function setError(_ref2, payload) {\n      var commit = _ref2.commit;\n      commit(actions.setError, payload);\n    },\n    setConfiguration: function setConfiguration(_ref3) {\n      var commit = _ref3.commit;\n      axios.get('https://api.themoviedb.org/3/configuration').then(function (response) {\n        commit(actions.setConfiguration, response.data);\n      }).catch(function (error) {\n        commit(actions.setError, error);\n      });\n    },\n    setGenres: function () {\n      var _setGenres = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref4) {\n        var commit, genres;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref4.commit;\n                genres = {\n                  tv: [],\n                  movies: []\n                };\n                _context.next = 4;\n                return axios.get('https://api.themoviedb.org/3/genre/movie/list').then(function (response) {\n                  genres.movies = response.data.genres;\n                }).catch(function (error) {\n                  commit(actions.setError, error);\n                });\n\n              case 4:\n                _context.next = 6;\n                return axios.get('https://api.themoviedb.org/3/genre/tv/list').then(function (response) {\n                  genres.tv = response.data.genres;\n                }).catch(function (error) {\n                  commit(actions.setError, error);\n                });\n\n              case 6:\n                commit(actions.setGenres, genres);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function setGenres(_x) {\n        return _setGenres.apply(this, arguments);\n      }\n\n      return setGenres;\n    }()\n  },\n  getters: {\n    configuration: function configuration(state) {\n      return state.configuration;\n    },\n    genres: function genres(state) {\n      return state.genres;\n    },\n    loading: function loading(state) {\n      return state.loading;\n    },\n    error: function error(state) {\n      return state.error;\n    }\n  }\n};",{"version":3,"sources":["/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/store/shared/index.js"],"names":["axios","actions","state","loading","configuration","genres","error","mutations","setLoading","payload","setError","clearError","setConfiguration","setGenres","commit","get","then","response","data","catch","tv","movies","getters"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { actions } from '../../helpers/constants';\n\nexport default {\n  state: {\n    loading: false,\n    configuration: null,\n    genres: null,\n    error: null,\n  },\n  mutations: {\n    setLoading(state, payload) {\n      state.loading = payload;\n    },\n    setError(state, payload) {\n      state.error = payload;\n    },\n    clearError(state) {\n      state.error = null;\n    },\n    setConfiguration(state, payload) {\n      state.configuration = payload;\n    },\n    setGenres(state, payload) {\n      state.genres = payload;\n    },\n  },\n  actions: {\n    clearError({ commit }) {\n      commit(actions.clearError);\n    },\n\n    setError({ commit }, payload) {\n      commit(actions.setError, payload);\n    },\n\n    setConfiguration({ commit }) {\n      axios.get('https://api.themoviedb.org/3/configuration')\n        .then(response => {\n          commit(actions.setConfiguration, response.data);\n        })\n        .catch(error => {\n          commit(actions.setError, error);\n        });\n    },\n\n    async setGenres ({ commit }) {\n      const genres = {\n        tv: [],\n        movies: []\n      };\n\n      await axios.get('https://api.themoviedb.org/3/genre/movie/list')\n        .then(response => {\n          genres.movies = response.data.genres;\n        })\n        .catch(error => {\n          commit(actions.setError, error);\n        });\n\n      await axios.get('https://api.themoviedb.org/3/genre/tv/list')\n        .then(response => {\n          genres.tv = response.data.genres;\n        })\n        .catch(error => {\n          commit(actions.setError, error);\n        });\n\n      commit(actions.setGenres, genres);\n    }\n  },\n  getters: {\n    configuration(state) {\n      return state.configuration;\n    },\n    genres(state) {\n      return state.genres;\n    },\n    loading(state) {\n      return state.loading;\n    },\n    error(state) {\n      return state.error;\n    },\n  },\n};\n"]}]}