{"remainingRequest":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieList/MovieList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/src/components/MovieList/MovieList.vue","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/babel.config.js","mtime":1629460388000},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/babel-loader/lib/index.js","mtime":1636081672330},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1636081674369},{"path":"/Users/crocslut/Desktop/Git/learningport-vue-netflix/node_modules/vue-loader/lib/index.js","mtime":1636081674749}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport MovieListItem from \"../MovieListItem/MovieListItem\";\nimport MovieDetails from \"../MovieDetails/MovieDetails\";\nimport Pagination from \"../Pagination/Pagination\";\nimport Spinner from \"../Spinner/Spinner\";\nexport default {\n  name: 'MovieList',\n  props: {\n    requestUrl: String,\n    emptyListTitle: String,\n    initialMovieList: Array\n  },\n  data: function data() {\n    return {\n      emptyTitle: this.emptyListTitle || 'No data here',\n      movieList: this.initialMovieList || [],\n      selectedMovie: null,\n      currentPage: 1,\n      totalPages: 0,\n      loading: false\n    };\n  },\n  components: {\n    MovieListItem: MovieListItem,\n    MovieDetails: MovieDetails,\n    Pagination: Pagination,\n    Spinner: Spinner\n  },\n  watch: {\n    requestUrl: function requestUrl(value) {\n      if (value !== null && value !== undefined) {\n        this.loadMovies();\n      }\n    },\n    emptyListTitle: function emptyListTitle(value) {\n      this.emptyTitle = value;\n    },\n    initialMovieList: function initialMovieList(value) {\n      if (value !== null && value !== undefined) {\n        this.movieList = value;\n        this.selectedMovie = null;\n      }\n    }\n  },\n  methods: {\n    toggleLoading: function toggleLoading() {\n      this.loading = !this.loading;\n    },\n    loadMovies: function loadMovies() {\n      var _this = this;\n\n      var query = this.$route.query;\n      var params = {\n        page: 1\n      };\n\n      for (var key in query) {\n        params[key] = decodeURIComponent(query[key]);\n      }\n\n      if (!this.requestUrl) return;\n      this.toggleLoading();\n      axios.get(\"https://api.themoviedb.org/3/\".concat(this.requestUrl), {\n        params: params\n      }).then(function (response) {\n        _this.movieList = response.data.results;\n        _this.currentPage = response.data.page;\n        _this.totalPages = response.data.total_pages < 1000 ? response.data.total_pages : 1000;\n      }).then(function () {\n        window.scrollTo(0, 0);\n      }).catch(function (error) {\n        console.log(error);\n      }).finally(function () {\n        _this.toggleLoading();\n      });\n    },\n    selectMovie: function selectMovie(movie) {\n      this.selectedMovie = movie;\n    },\n    unselectMovie: function unselectMovie() {\n      this.selectedMovie = null;\n    }\n  },\n  mounted: function mounted() {\n    this.loadMovies();\n  }\n};",{"version":3,"sources":["MovieList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"MovieList__wrapper\">\n    <transition name=\"fade\">\n      <div class=\"MovieList\" v-if=\"movieList.length !== 0\">\n        <MovieListItem\n          v-for=\"(movie, index) in movieList\"\n          :key=\"index\"\n          :movie=\"movie\"\n          v-on:select-movie=\"selectMovie\"\n        />\n      </div>\n      <div v-else-if=\"!loading && movieList.length === 0\" class=\"MovieList__empty\">\n        {{ emptyTitle }}\n      </div>\n    </transition>\n    <transition name=\"fade\">\n      <div v-if=\"selectedMovie\" class=\"MovieList__details-backdrop\" @click=\"unselectMovie\">\n        <div @click.stop class=\"MovieList__details\">\n          <MovieDetails :movie=\"selectedMovie\" />\n          <button type=\"button\" class=\"btn--close\" @click=\"unselectMovie\" />\n        </div>\n      </div>\n    </transition>\n    <div v-if=\"loading\" class=\"Spinner__overflow\">\n      <Spinner />\n    </div>\n    <Pagination\n      v-if=\"totalPages\"\n      :current-page=\"currentPage\"\n      :total-pages=\"totalPages\"\n      @load=\"loadMovies\"\n    />\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  import MovieListItem from '../MovieListItem/MovieListItem';\n  import MovieDetails from '../MovieDetails/MovieDetails';\n  import Pagination from '../Pagination/Pagination';\n  import Spinner from '../Spinner/Spinner';\n\n  export default {\n    name: 'MovieList',\n    props: {\n      requestUrl: String,\n      emptyListTitle: String,\n      initialMovieList: Array,\n    },\n    data () {\n      return {\n        emptyTitle: this.emptyListTitle || 'No data here',\n        movieList: this.initialMovieList || [],\n        selectedMovie: null,\n        currentPage: 1,\n        totalPages: 0,\n        loading: false,\n      };\n    },\n    components: {\n      MovieListItem,\n      MovieDetails,\n      Pagination,\n      Spinner,\n    },\n    watch: {\n      requestUrl(value) {\n        if (value !== null && value !== undefined) {\n          this.loadMovies();\n        }\n      },\n      emptyListTitle(value) {\n        this.emptyTitle = value;\n      },\n      initialMovieList(value) {\n        if (value !== null && value !== undefined) {\n          this.movieList = value;\n          this.selectedMovie = null;\n        }\n      },\n    },\n    methods: {\n      toggleLoading() {\n        this.loading = !this.loading;\n      },\n      loadMovies() {\n        let { query } = this.$route;\n        const params = { page: 1 };\n        for (let key in query) {\n          params[key] = decodeURIComponent(query[key]);\n        }\n\n        if (!this.requestUrl) return;\n\n        this.toggleLoading();\n        axios.get(`https://api.themoviedb.org/3/${this.requestUrl}`, { params })\n          .then(response => {\n            this.movieList = response.data.results;\n            this.currentPage = response.data.page;\n            this.totalPages = response.data.total_pages < 1000 ? response.data.total_pages : 1000;\n          })\n          .then(() => {\n            window.scrollTo(0, 0);\n          })\n          .catch(error => {\n            console.log(error);\n          })\n          .finally(() => {\n          this.toggleLoading();\n        });\n      },\n      selectMovie(movie) {\n        this.selectedMovie = movie;\n      },\n      unselectMovie() {\n        this.selectedMovie = null;\n      },\n    },\n    mounted() {\n      this.loadMovies();\n    },\n  }\n</script>\n\n<style lang=\"scss\">\n  @import 'MovieList';\n</style>\n"],"sourceRoot":"src/components/MovieList"}]}